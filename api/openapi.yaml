openapi: 3.0.1
info:
  contact:
    email: contact@namsor.com
    name: Namsor SAS
    url: http://www.namsor.com/
  description: 'NamSor API v2 : enpoints to process personal names (gender, cultural
    origin or ethnicity) in all alphabets or languages. Use GET methods for small
    tests, but prefer POST methods for higher throughput (batch processing of up to
    100 names at a time). Need something you can''t find here? We have many more features
    coming soon. Let us know, we''ll do our best to add it! '
  license:
    name: NamSorAPI_Lic_v0.0.7
    url: https://v2.namsor.com/NamSorAPIv2/assets/pdf/201803_NamSor_API_Terms_v007.pdf
  title: NamSor API v2
  version: 2.0.11
externalDocs:
  description: NamSor API client SDKs v2 for Java, Python
  url: https://github.com/namsor
servers:
- description: namsor_v2
  url: https://v2.namsor.com/NamSorAPIv2
security:
- api_key: []
tags:
- description: 'Personal names (anthroponyms) : gender, country origin/ethnicity,
    diaspora, US ''race''/ethniciy'
  name: personal
- description: Social media and pseudonyms
  name: social
- description: CHINESE special features
  name: chinese
- description: JAPANESE special features
  name: japanese
- description: Administrative, system management.
  name: admin
paths:
  /api2/json/nameType/{properNoun}:
    get:
      operationId: nameType
      parameters:
      - explode: false
        in: path
        name: properNoun
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProperNounCategorizedOut'
          description: A typed name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely type of a proper noun (personal name, brand name, place name etc.)
      tags:
      - general
  /api2/json/nameType/{properNoun}/{countryIso2}:
    get:
      operationId: nameType_1
      parameters:
      - explode: false
        in: path
        name: properNoun
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProperNounCategorizedOut'
          description: A typed name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely type of a proper noun (personal name, brand name, place name etc.)
      tags:
      - general
  /api2/json/country/{personalNameFull}:
    get:
      operationId: country
      parameters:
      - explode: false
        in: path
        name: personalNameFull
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameGeoOut'
          description: A origined name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 10 UNITS PER NAME] Infer the likely country of residence of
        a personal full name, or one surname. Assumes names as they are in the country
        of residence OR the country of origin.'
      tags:
      - personal
  /api2/json/origin/{firstName}/{lastName}:
    get:
      operationId: origin
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameOriginedOut'
          description: A origined name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal
        name. Assumes names as they are in the country of origin. For US, CA, AU,
        NZ and other melting-pots : use ''diaspora'' instead.'
      tags:
      - personal
  /api2/json/stripeConnect:
    get:
      operationId: stripeConnect
      parameters:
      - explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: code
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: error
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: error_description
        required: false
        schema:
          type: string
        style: form
      responses:
        401:
          description: Missing or incorrect email or payment token
      summary: Connects a Stripe Account.
      tags:
      - admin
  /api2/json/charge:
    post:
      operationId: charge
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          '*/*':
            schema:
              properties:
                stripeToken:
                  type: string
                stripeEmail:
                  type: string
              type: object
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyOut'
          description: A stripe customerID
        401:
          description: Missing or incorrect email or payment token
      summary: Create a Stripe Customer, based on a payment card token (from secure StripeJS) and email.
      tags:
      - admin
  /api2/json/paymentInfo/{token}:
    get:
      operationId: paymentInfo
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyOut'
          description: An session token
        401:
          description: Missing or incorrect token
      summary: Get the Stripe payment information associated with the current google auth session token.
      tags:
      - admin
  /api2/json/updatePaymentDefault/{defautSourceId}/{token}:
    get:
      operationId: updatePaymentDefault
      parameters:
      - explode: false
        in: path
        name: defautSourceId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyOut'
          description: An session token
        401:
          description: Missing or incorrect token
      summary: Update the default Stripe card associated with the current google auth session token.
      tags:
      - admin
  /api2/json/softwareVersion:
    get:
      operationId: softwareVersion
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareVersionOut'
          description: The current software version
        401:
          description: Missing or incorrect token
      summary: Get the current software version
      tags:
      - admin
  /api2/json/namsorCounter:
    get:
      operationId: namsorCounter
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareVersionOut'
          description: The overall API counter
        401:
          description: Missing or incorrect token
      summary: Get the overall API counter
      tags:
      - admin
  /api2/json/billingCurrencies:
    get:
      operationId: billingCurrencies
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrenciesOut'
          description: The supported billing currencies.
        401:
          description: Missing or incorrect token
      summary: List possible currency options for billing (USD, EUR, GBP, ...)
      tags:
      - admin
  /api2/json/billingInfo/{token}:
    get:
      operationId: billingInfo
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingInfoInOut'
          description: The current billing info
        401:
          description: Missing or incorrect token
      summary: Read the billing information (company name, address, phone, vat ID)
      tags:
      - admin
  /api2/json/updateBillingInfo/{token}:
    post:
      operationId: updateBillingInfo
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/BillingInfoInOut'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingInfoInOut'
          description: The updated billing info
        401:
          description: Missing or incorrect token
      summary: Sets or update the billing information (company name, address, phone, vat ID)
      tags:
      - admin
  /api2/json/billingHistory/{token}:
    get:
      operationId: billingHistory
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingHistoryOut'
          description: The billing history
        401:
          description: Missing or incorrect token
      summary: Read the history billing information (invoices paid via Stripe or manually).
      tags:
      - admin
  /api2/json/procureKey/{token}:
    get:
      operationId: procureKey
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyOut'
          description: An API Key
        401:
          description: Missing or incorrect token
      summary: Procure an API Key (sent via Email), based on an auth token. Keep your API Key secret.
      tags:
      - admin
  /api2/json/availablePlans/{token}:
    get:
      operationId: availablePlans
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPlansOut'
          description: Available plans
        401:
          description: Missing or incorrect token
      summary: List all available plans in the user's preferred currency.
      tags:
      - admin
  /api2/json/availablePlans:
    get:
      operationId: availablePlans_1
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPlansOut'
          description: Available plans
        401:
          description: Missing or incorrect token
      summary: List all available plans in the default currency (usd).
      tags:
      - admin
  /api2/json/apiStatus:
    get:
      operationId: apiStatus
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPlansOut'
          description: Available classifiers and status
        401:
          description: Missing or incorrect token
      summary: Prints the current status of the classifiers.
      tags:
      - admin
  /api2/json/apiServices:
    get:
      operationId: availableServices
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPlansOut'
          description: Available services
        401:
          description: Missing or incorrect token
      summary: List of API services and usage cost in Units (default is 1=ONE Unit).
      tags:
      - admin
  /api2/json/taxonomyClasses/{classifierName}:
    get:
      operationId: taxonomyClasses
      parameters:
      - explode: false
        in: path
        name: classifierName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPlansOut'
          description: Available plans
        401:
          description: Missing or incorrect token
      summary: Print the taxonomy classes valid for the given classifier.
      tags:
      - admin
  /api2/json/subscribePlan/{planName}/{token}:
    get:
      operationId: subscribePlan
      parameters:
      - explode: false
        in: path
        name: planName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPlanSubscriptionOut'
          description: An API subscription
        401:
          description: Missing or incorrect token
      summary: Subscribe to a give API plan, using the user's preferred or default currency.
      tags:
      - admin
  /api2/json/subscribePlanOnBehalf/{planName}/{apiKey}:
    get:
      operationId: subscribePlanOnBehalf
      parameters:
      - explode: false
        in: path
        name: planName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: apiKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPlanSubscriptionOut'
          description: An API subscription
        401:
          description: Missing or incorrect token
      summary: Subscribe to a give API plan, using the user's preferred or default currency (admin only).
      tags:
      - admin
  /api2/json/removeUserAccount/{token}:
    get:
      operationId: removeUserAccount
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPlanSubscriptionOut'
          description: An API subscription
        401:
          description: Missing or incorrect token
      summary: Remove the user account.
      tags:
      - admin
  /api2/json/removeUserAccountOnBehalf/{apiKey}:
    get:
      operationId: removeUserAccountOnBehalf
      parameters:
      - explode: false
        in: path
        name: apiKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPlanSubscriptionOut'
          description: An API subscription
        401:
          description: Missing or incorrect token
      summary: Remove (on behalf) a user account.
      tags:
      - admin
  /api2/json/updateLimit/{usageLimit}/{hardOrSoft}/{token}:
    get:
      operationId: updateLimit
      parameters:
      - explode: false
        in: path
        name: usageLimit
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: hardOrSoft
        required: true
        schema:
          type: boolean
        style: simple
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPeriodUsageOut'
          description: An API subscription
        401:
          description: Missing or incorrect token
      summary: Modifies the hard/soft limit on the API plan's overages (default is 0$ soft limit).
      tags:
      - admin
  /api2/json/verifyEmail/{emailToken}:
    get:
      operationId: verifyEmail
      parameters:
      - explode: false
        in: path
        name: emailToken
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyOut'
          description: An API Key
        401:
          description: Missing or incorrect token
      summary: Verifies an email, based on token sent to that email
      tags:
      - admin
  /api2/json/verifyRemoveEmail/{emailToken}:
    get:
      operationId: verifyRemoveEmail
      parameters:
      - explode: false
        in: path
        name: emailToken
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyOut'
          description: An API Key
        401:
          description: Missing or incorrect token
      summary: Verifies an email, based on token sent to that email
      tags:
      - admin
  /api2/json/stats:
    get:
      operationId: stats
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemMetricsOut'
          description: Current system status.
        401:
          description: Missing or incorrect API Key
      security:
      - api_key: []
      summary: Print basic system statistics.
      tags:
      - admin
  /api2/json/apiUsage:
    get:
      operationId: apiUsage
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPeriodUsageOut'
          description: Print current API usage.
        401:
          description: Missing or incorrect API Key
      security:
      - api_key: []
      summary: Print current API usage.
      tags:
      - admin
  /api2/json/apiUsageHistory:
    get:
      operationId: apiUsageHistory
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPeriodUsageOut'
          description: Print historical API usage.
        401:
          description: Missing or incorrect API Key
      security:
      - api_key: []
      summary: Print historical API usage.
      tags:
      - admin
  /api2/json/apiUsageHistoryAggregate:
    get:
      operationId: apiUsageHistoryAggregate
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPeriodUsageOut'
          description: Print historical API usage.
        401:
          description: Missing or incorrect API Key
      security:
      - api_key: []
      summary: Print historical API usage (in an aggregated view, by service, by day/hour/min).
      tags:
      - admin
  /api2/json/sourceStats/{source}:
    get:
      operationId: sourceStats
      parameters:
      - explode: false
        in: path
        name: source
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemMetricsOut'
          description: Current system status.
        401:
          description: Missing or incorrect API Key
      security:
      - api_key: []
      summary: Print basic source statistics.
      tags:
      - admin
  /api2/json/addCredits/{apiKey}/{usageCredits}/{userMessage}:
    get:
      operationId: addCredits
      parameters:
      - explode: false
        in: path
        name: apiKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: usageCredits
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: userMessage
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemMetricsOut'
          description: Estimate new after applying credits.
        401:
          description: Missing or incorrect API Key
      security:
      - api_key: []
      summary: Add usage credits to an API Key.
      tags:
      - admin
  /api2/json/redeployUI/{live}:
    get:
      operationId: redeployUI
      parameters:
      - explode: false
        in: path
        name: live
        required: true
        schema:
          type: boolean
        style: simple
      responses:
        200:
          description: Redeploy UI from DEV.
        401:
          description: Missing or incorrect API Key
      security:
      - api_key: []
      summary: Redeploy UI from current dev branch.
      tags:
      - admin
  /api2/json/redeployUI:
    get:
      operationId: redeployUI_1
      responses:
        200:
          description: Redeploy UI from DEV.
        401:
          description: Missing or incorrect API Key
      security:
      - api_key: []
      summary: Redeploy UI from current dev branch.
      tags:
      - admin
  /api2/json/invalidateCache:
    get:
      operationId: invalidateCache
      responses:
        200:
          description: Clear caches.
        401:
          description: Missing or incorrect API Key
      summary: Invalidate system caches.
      tags:
      - admin
  /api2/json/debugLevel/{logger}/{level}:
    get:
      operationId: debugLevel
      parameters:
      - explode: false
        in: path
        name: logger
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: level
        required: true
        schema:
          type: string
        style: simple
      responses:
        401:
          description: Missing or incorrect API Key
      summary: Update debug level for a classifier
      tags:
      - admin
  /api2/json/learnable/{source}/{learnable}:
    get:
      operationId: learnable
      parameters:
      - explode: false
        in: path
        name: source
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: learnable
        required: true
        schema:
          type: boolean
        style: simple
      responses:
        200:
          description: Vetting of a source.
        401:
          description: Missing or incorrect API Key
      summary: Activate/deactivate learning from a source.
      tags:
      - admin
  /api2/json/anonymize/{source}/{anonymized}:
    get:
      operationId: anonymize
      parameters:
      - explode: false
        in: path
        name: source
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: anonymized
        required: true
        schema:
          type: boolean
        style: simple
      responses:
        200:
          description: Anonymization of a source.
        401:
          description: Missing or incorrect API Key
      summary: Activate/deactivate anonymization for a source.
      tags:
      - admin
  /api2/json/vetting/{source}/{vetted}:
    get:
      operationId: vet
      parameters:
      - explode: false
        in: path
        name: source
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: vetted
        required: true
        schema:
          type: boolean
        style: simple
      responses:
        200:
          description: Vetting of a source.
        401:
          description: Missing or incorrect API Key
      summary: Vetting of a source.
      tags:
      - admin
  /api2/json/corporateKey/{apiKey}/{corporate}:
    get:
      operationId: corporateKey
      parameters:
      - explode: false
        in: path
        name: apiKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: corporate
        required: true
        schema:
          type: boolean
        style: simple
      responses:
        200:
          description: API Key set to a corporate status.
        401:
          description: Missing or incorrect API Key
      summary: Setting an API Key to a corporate status.
      tags:
      - admin
  /api2/json/gender/{firstName}/{lastName}:
    get:
      operationId: gender
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameGenderedOut'
          description: A genderized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of a name.
      tags:
      - personal
  /api2/json/genderGeo/{firstName}/{lastName}/{countryIso2}:
    get:
      operationId: genderGeo
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameGenderedOut'
          description: A genderized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of a name, given a local context (ISO2 country code).
      tags:
      - personal
  /api2/json/genderGeoBatch:
    post:
      operationId: genderGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGeoIn'
        description: A list of names, with country code.
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameGenderedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 names, each given a local context (ISO2 country code).
      tags:
      - personal
  /api2/json/genderBatch:
    post:
      operationId: genderBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameGenderedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 names, detecting automatically the cultural context.
      tags:
      - personal
  /api2/json/parsedGenderBatch:
    post:
      operationId: parsedGenderBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchParsedFullNameIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameGenderedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 fully parsed names, detecting automatically the cultural context.
      tags:
      - personal
  /api2/json/parsedGenderGeoBatch:
    post:
      operationId: parsedGenderGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchParsedFullNameGeoIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameGenderedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 fully parsed names, detecting automatically the cultural context.
      tags:
      - personal
  /api2/json/genderFullGeo/{fullName}/{countryIso2}:
    get:
      operationId: genderFullGeo
      parameters:
      - explode: false
        in: path
        name: fullName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameGenderedOut'
          description: A genderized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of a full name, given a local context (ISO2 country code).
      tags:
      - personal
  /api2/json/genderFull/{fullName}:
    get:
      operationId: genderFull
      parameters:
      - explode: false
        in: path
        name: fullName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameGenderedOut'
          description: A genderized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of a full name, ex. John H. Smith
      tags:
      - personal
  /api2/json/genderFullBatch:
    post:
      operationId: genderFullBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameGenderedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 full names, detecting automatically the cultural context.
      tags:
      - personal
  /api2/json/genderFullGeoBatch:
    post:
      operationId: genderFullGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameGeoIn'
        description: A list of personal names, with a country ISO2 code
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameGenderedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code).
      tags:
      - personal
  /api2/json/originBatch:
    post:
      operationId: originBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameOriginedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 10 UNITS PER NAME] Infer the likely country of origin of up
        to 100 names, detecting automatically the cultural context.'
      tags:
      - personal
  /api2/json/countryBatch:
    post:
      operationId: countryBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameGeoOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 10 UNITS PER NAME] Infer the likely country of residence of
        up to 100 personal full names, or surnames. Assumes names as they are in the
        country of residence OR the country of origin.'
      tags:
      - personal
  /api2/json/usRaceEthnicity/{firstName}/{lastName}:
    get:
      operationId: usRaceEthnicity
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameUSRaceEthnicityOut'
          description: 'a US resident''s likely race/ethnicity : W_NL (white, non
            latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non
            latino).'
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 10 UNITS PER NAME] Infer a US resident''s likely race/ethnicity
        according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A
        (asian, non latino), B_NL (black, non latino).'
      tags:
      - personal
  /api2/json/usRaceEthnicityZIP5/{firstName}/{lastName}/{zip5Code}:
    get:
      operationId: usRaceEthnicityZIP5
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: zip5Code
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameUSRaceEthnicityOut'
          description: 'a US resident''s likely race/ethnicity : W_NL (white, non
            latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non
            latino).'
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 10 UNITS PER NAME] Infer a US resident''s likely race/ethnicity
        according to US Census taxonomy, using (optional) ZIP5 code info. Output is
        W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL
        (black, non latino).'
      tags:
      - personal
  /api2/json/usRaceEthnicityBatch:
    post:
      operationId: usRaceEthnicityBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGeoIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameUSRaceEthnicityOut'
          description: A list of US resident's likely race/ethnicity. W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino).
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 10 UNITS PER NAME] Infer up-to 100 US resident''s likely race/ethnicity
        according to US Census taxonomy.'
      tags:
      - personal
  /api2/json/usZipRaceEthnicityBatch:
    post:
      operationId: usZipRaceEthnicityBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGeoZippedIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameUSRaceEthnicityOut'
          description: A list of US resident's likely race/ethnicity. W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino).
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 10 UNITS PER NAME] Infer up-to 100 US resident''s likely race/ethnicity
        according to US Census taxonomy, with (optional) ZIP code.'
      tags:
      - personal
  /api2/json/diaspora/{countryIso2}/{firstName}/{lastName}:
    get:
      operationId: diaspora
      parameters:
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameDiasporaedOut'
          description: A diaspora / ethnicity for given name and geography.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a
        personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ
        etc.)'
      tags:
      - personal
  /api2/json/diasporaBatch:
    post:
      operationId: diasporaBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGeoIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameDiasporaedOut'
          description: A list of diaspora / ethnicity given a name and residency.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up
        to 100 personal names, given a country of residence ISO2 code (ex. US, CA,
        AU, NZ etc.)'
      tags:
      - personal
  /api2/json/parseName/{nameFull}/{countryIso2}:
    get:
      operationId: parseNameGeo
      parameters:
      - explode: false
        in: path
        name: nameFull
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameParsedOut'
          description: A origined name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context.
      tags:
      - personal
  /api2/json/parseNameBatch:
    post:
      operationId: parseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameParsedOut'
          description: A list of parsed names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.
      tags:
      - personal
  /api2/json/parseNameGeoBatch:
    post:
      operationId: parseNameGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameGeoIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameParsedOut'
          description: A list of parsed names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: 'Infer the likely first/last name structure of a name, ex. John Smith
        or SMITH, John or SMITH; John. Giving a local context improves precision. '
      tags:
      - personal
  /api2/json/parseChineseName/{chineseName}:
    get:
      operationId: parseChineseName
      parameters:
      - explode: false
        in: path
        name: chineseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameParsedOut'
          description: A origined name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name)
      tags:
      - chinese
  /api2/json/parseChineseNameBatch:
    post:
      operationId: parseChineseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameParsedOut'
          description: A list of parsed names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name).
      tags:
      - chinese
  /api2/json/pinyinChineseName/{chineseName}:
    get:
      operationId: pinyinChineseName
      parameters:
      - explode: false
        in: path
        name: chineseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameParsedOut'
          description: A pinyin name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name)
      tags:
      - chinese
  /api2/json/pinyinChineseNameBatch:
    post:
      operationId: pinyinChineseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of Chinese names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameParsedOut'
          description: A list of Pinyin names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name).
      tags:
      - chinese
  /api2/json/chineseNameMatch/{chineseSurnameLatin}/{chineseGivenNameLatin}/{chineseName}:
    get:
      operationId: chineseNameMatch
      parameters:
      - explode: false
        in: path
        name: chineseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: chineseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: chineseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RomanizedNameOut'
          description: A romanized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming
      tags:
      - chinese
  /api2/json/chineseNameMatchBatch:
    post:
      operationId: chineseNameMatchBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of personal Chinese names in LATIN, firstName = chineseGivenName; lastName=chineseSurname
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchCandidatesOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming
      tags:
      - chinese
  /api2/json/genderChineseNamePinyin/{chineseSurnameLatin}/{chineseGivenNameLatin}:
    get:
      operationId: genderChineseNamePinyin
      parameters:
      - explode: false
        in: path
        name: chineseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: chineseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameGenderedOut'
          description: A genderized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of a Chinese name in LATIN (Pinyin).
      tags:
      - chinese
  /api2/json/genderChineseNamePinyinBatch:
    post:
      operationId: genderChineseNamePinyinBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of names, with country code.
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameGenderedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin).
      tags:
      - chinese
  /api2/json/genderChineseName/{chineseName}:
    get:
      operationId: genderChineseName
      parameters:
      - explode: false
        in: path
        name: chineseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameGenderedOut'
          description: A genderized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of a Chinese full name ex. 王晓明
      tags:
      - chinese
  /api2/json/genderChineseNameBatch:
    post:
      operationId: genderChineseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names, with a country ISO2 code
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameGenderedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 full names ex. 王晓明
      tags:
      - chinese
  /api2/json/chineseNameCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}:
    get:
      operationId: chineseNameCandidates
      parameters:
      - explode: false
        in: path
        name: chineseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: chineseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RomanizedNameOut'
          description: A romanized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming
      tags:
      - chinese
  /api2/json/chineseNameCandidatesBatch:
    post:
      operationId: chineseNameCandidatesBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of personal Chinese names in LATIN, firstName = chineseGivenName; lastName=chineseSurname
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchCandidatesOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming
      tags:
      - chinese
  /api2/json/chineseNameGenderCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}/{knownGender}:
    get:
      operationId: chineseNameGenderCandidates
      parameters:
      - explode: false
        in: path
        name: chineseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: chineseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: knownGender
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RomanizedNameOut'
          description: A romanized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female')
      tags:
      - chinese
  /api2/json/chineseNameCandidatesGenderBatch:
    post:
      operationId: chineseNameCandidatesGenderBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of personal Chinese names in LATIN, firstName = chineseGivenName; lastName=chineseSurname
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchCandidatesOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming.
      tags:
      - chinese
  /api2/json/parseJapaneseName/{japaneseName}:
    get:
      operationId: parseJapaneseName
      parameters:
      - explode: false
        in: path
        name: japaneseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameParsedOut'
          description: A origined name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae
      tags:
      - japanese
  /api2/json/parseJapaneseNameBatch:
    post:
      operationId: parseJapaneseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameParsedOut'
          description: A list of parsed names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: 'Infer the likely first/last name structure of a name, ex. 山本 早苗 or
        Yamamoto Sanae '
      tags:
      - japanese
  /api2/json/japaneseNameKanjiCandidates/{japaneseSurnameLatin}/{japaneseGivenNameLatin}:
    get:
      operationId: japaneseNameKanjiCandidates
      parameters:
      - explode: false
        in: path
        name: japaneseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RomanizedNameOut'
          description: A romanized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae
      tags:
      - japanese
  /api2/json/japaneseNameLatinCandidates/{japaneseSurnameKanji}/{japaneseGivenNameKanji}:
    get:
      operationId: japaneseNameLatinCandidates
      parameters:
      - explode: false
        in: path
        name: japaneseSurnameKanji
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseGivenNameKanji
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RomanizedNameOut'
          description: A romanized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Romanize japanese name, based on the name in Kanji.
      tags:
      - japanese
  /api2/json/japaneseNameKanjiCandidatesBatch:
    post:
      operationId: japaneseNameKanjiCandidatesBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of personal japanese names in LATIN, firstName = japaneseGivenName; lastName=japaneseSurname
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchCandidatesOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae
      tags:
      - japanese
  /api2/json/japaneseNameLatinCandidatesBatch:
    post:
      operationId: japaneseNameLatinCandidatesBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of personal japanese names in KANJI, firstName = japaneseGivenName; lastName=japaneseSurname
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchCandidatesOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Romanize japanese names, based on the name in KANJI
      tags:
      - japanese
  /api2/json/japaneseNameMatch/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{japaneseName}:
    get:
      operationId: japaneseNameMatch
      parameters:
      - explode: false
        in: path
        name: japaneseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RomanizedNameOut'
          description: A romanized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae
      tags:
      - japanese
  /api2/json/japaneseNameMatchFeedbackLoop/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{japaneseName}:
    get:
      operationId: japaneseNameMatchFeedbackLoop
      parameters:
      - explode: false
        in: path
        name: japaneseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RomanizedNameOut'
          description: A romanized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese
        name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae'
      tags:
      - japanese
  /api2/json/japaneseNameMatchBatch:
    post:
      operationId: japaneseNameMatchBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of personal Japanese names in LATIN, firstName = japaneseGivenName; lastName=japaneseSurname
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchCandidatesOut'
          description: A list of matched names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae
      tags:
      - japanese
  /api2/json/genderJapaneseName/{japaneseSurname}/{japaneseGivenName}:
    get:
      operationId: genderJapaneseNamePinyin
      parameters:
      - explode: false
        in: path
        name: japaneseSurname
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseGivenName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameGenderedOut'
          description: A genderized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of a Japanese name in LATIN (Pinyin).
      tags:
      - japanese
  /api2/json/genderJapaneseNameBatch:
    post:
      operationId: genderJapaneseNamePinyinBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of names, with country code.
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameGenderedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin).
      tags:
      - japanese
  /api2/json/genderJapaneseNameFull/{japaneseName}:
    get:
      operationId: genderJapaneseNameFull
      parameters:
      - explode: false
        in: path
        name: japaneseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameGenderedOut'
          description: A genderized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of a Japanese full name ex. 王晓明
      tags:
      - japanese
  /api2/json/genderJapaneseNameFullBatch:
    post:
      operationId: genderJapaneseNameFullBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameGenderedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 full names
      tags:
      - japanese
  /api2/json/phoneCode/{firstName}/{lastName}/{phoneNumber}:
    get:
      operationId: phoneCode
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: phoneNumber
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNamePhoneCodedOut'
          description: A name with country and phone code.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 11 UNITS PER NAME] Infer the likely country and phone prefix,
        given a personal name and formatted / unformatted phone number.'
      tags:
      - social
  /api2/json/phoneCodeGeo/{firstName}/{lastName}/{phoneNumber}/{countryIso2}:
    get:
      operationId: phoneCodeGeo
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: phoneNumber
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNamePhoneCodedOut'
          description: A name with country and phone code.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal
        name and formatted / unformatted phone number, with a local context (ISO2
        country of residence).'
      tags:
      - social
  /api2/json/phoneCodeGeoFeedbackLoop/{firstName}/{lastName}/{phoneNumber}/{phoneNumberE164}/{countryIso2}:
    get:
      operationId: phoneCodeGeoFeedbackLoop
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: phoneNumber
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: phoneNumberE164
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNamePhoneCodedOut'
          description: A name with country and phone code.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix,
        given a personal name and formatted / unformatted phone number, with a local
        context (ISO2 country of residence).'
      tags:
      - social
  /api2/json/phoneCodeBatch:
    post:
      operationId: phoneCodeBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNamePhoneNumberIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNamePhoneCodedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 11 UNITS PER NAME] Infer the likely country and phone prefix,
        of up to 100 personal names, detecting automatically the local context given
        a name and formatted / unformatted phone number.'
      tags:
      - social
  /api2/json/phoneCodeGeoBatch:
    post:
      operationId: phoneCodeGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNamePhoneNumberGeoIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNamePhoneCodedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 11 UNITS PER NAME] Infer the likely country and phone prefix,
        of up to 100 personal names, with a local context (ISO2 country of residence).'
      tags:
      - social
  /api2/json/shutdown:
    get:
      operationId: shutdown
      responses:
        200:
          description: Shutdown AI.
        401:
          description: Missing or incorrect API Key
      security:
      - api_key: []
      summary: Stop learning and shutdown system.
      tags:
      - admin
  /api2/json/flush:
    get:
      operationId: flush
      responses:
        200:
          description: Flush API Key caches.
        401:
          description: Missing or incorrect API Key
      security:
      - api_key: []
      summary: Flush counters.
      tags:
      - admin
  /api2/json/userInfo/{token}:
    get:
      operationId: userInfo
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyOut'
          description: An session token
        401:
          description: Missing or incorrect token
      summary: Get the user profile associated with the current google auth session token.
      tags:
      - admin
  /api2/json/parseName/{nameFull}:
    get:
      operationId: parseName
      parameters:
      - explode: false
        in: path
        name: nameFull
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameParsedOut'
          description: A origined name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: 'Infer the likely first/last name structure of a name, ex. John Smith
        or SMITH, John or SMITH; John. '
      tags:
      - personal
components:
  requestBodies:
    inline_object:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/inline_object'
  schemas:
    BatchFirstLastNameGenderedOut:
      description: Represents the output of inferring the LIKELY gender from a list of personal names.
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          genderScale: 0.80082819046101150206595775671303272247314453125
          score: 6.02745618307040320615897144307382404804229736328125
          probabilityCalibrated: 1.46581298050294517310021547018550336360931396484375
          likelyGender: male
          id: id
        - firstName: firstName
          lastName: lastName
          genderScale: 0.80082819046101150206595775671303272247314453125
          score: 6.02745618307040320615897144307382404804229736328125
          probabilityCalibrated: 1.46581298050294517310021547018550336360931396484375
          likelyGender: male
          id: id
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/FirstLastNameGenderedOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGenderedOut
    BillingInfoInOut:
      example:
        addressCountry: addressCountry
        addressPostalCode: addressPostalCode
        customerPhone: customerPhone
        billingEmail: billingEmail
        preferredCurrency: preferredCurrency
        vatID: vatID
        addressLine1: addressLine1
        addressLine2: addressLine2
        addressState: addressState
        customerName: customerName
        addressCity: addressCity
      properties:
        billingEmail:
          type: string
        preferredCurrency:
          type: string
        customerName:
          type: string
        customerPhone:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressCity:
          type: string
        addressPostalCode:
          type: string
        addressState:
          type: string
        addressCountry:
          type: string
        vatID:
          type: string
      type: object
      xml:
        name: BillingInfoInOut
    StripeCardOut:
      properties:
        defaultCard:
          type: boolean
        sourceId:
          type: string
        expMonth:
          format: int64
          type: integer
        expYear:
          format: int64
          type: integer
        last4:
          type: string
        brand:
          type: string
      type: object
      xml:
        name: StripeCustomerOut
    BatchParsedFullNameGeoIn:
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          prefixOrTitle: prefixOrTitle
          middleName: middleName
          id: id
          countryIso2: countryIso2
          suffix: suffix
        - firstName: firstName
          lastName: lastName
          prefixOrTitle: prefixOrTitle
          middleName: middleName
          id: id
          countryIso2: countryIso2
          suffix: suffix
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/ParsedFullNameGeoIn'
          type: array
      type: object
      xml:
        name: BatchParsedFullNameGeoIn
    UserInfoOut:
      properties:
        uid:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        emailVerified:
          type: boolean
        displayName:
          type: string
        photoUrl:
          type: string
        disabled:
          type: boolean
        firstKnownIpAddress:
          type: string
        providerId:
          type: string
        timeStamp:
          format: int64
          type: integer
        verifyToken:
          type: string
        apiKey:
          type: string
        stripePerishableKey:
          type: string
        stripeCustomerId:
          type: string
        otherInfos:
          items:
            $ref: '#/components/schemas/UserInfoOut'
          type: array
      type: object
      xml:
        name: UserInfoOut
    FirstLastNamePhoneNumberIn:
      example:
        firstName: firstName
        lastName: lastName
        phoneNumber: phoneNumber
        id: id
        FirstLastNameOriginedOut:
          regionOrigin: regionOrigin
          topRegionOrigin: topRegionOrigin
          firstName: firstName
          lastName: lastName
          score: 0.80082819046101150206595775671303272247314453125
          probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
          subRegionOrigin: subRegionOrigin
          probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
          countriesOriginTop:
          - countriesOriginTop
          - countriesOriginTop
          id: id
          countryOrigin: countryOrigin
          countryOriginAlt: countryOriginAlt
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        phoneNumber:
          type: string
        FirstLastNameOriginedOut:
          $ref: '#/components/schemas/FirstLastNameOriginedOut'
      type: object
      xml:
        name: FirstLastNamePhoneNumberIn
    APICounterV2Out:
      properties:
        apiKey:
          $ref: '#/components/schemas/APIKeyOut'
        apiService:
          type: string
        createdDateTime:
          format: int64
          type: integer
        totalUsage:
          format: int64
          type: integer
        lastFlushedDateTime:
          format: int64
          type: integer
        lastUsedDateTime:
          format: int64
          type: integer
        serviceFeaturesUsage:
          additionalProperties:
            format: int64
            type: integer
          type: object
      type: object
      xml:
        name: APICallStatOut
    APIPlanOut:
      example:
        planQuota: 6
        price: 1.46581298050294517310021547018550336360931396484375
        planName: planName
        priceOverage: 5.962133916683182377482808078639209270477294921875
      properties:
        planName:
          type: string
        planQuota:
          format: int64
          type: integer
        price:
          format: double
          type: number
        priceOverage:
          format: double
          type: number
      type: object
      xml:
        name: APIPlanOut
    NameMatchCandidatesOut:
      example:
        firstName: firstName
        lastName: lastName
        matchCandidates:
        - candidateName: candidateName
          probability: 0.80082819046101150206595775671303272247314453125
        - candidateName: candidateName
          probability: 0.80082819046101150206595775671303272247314453125
        id: id
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        matchCandidates:
          items:
            $ref: '#/components/schemas/NameMatchCandidateOut'
          type: array
      type: object
      xml:
        name: NameMatchCandidatesOut
    CacheMetricsOut:
      description: Simple metrics system caches
      example:
        cacheName: cacheName
        cacheStats: cacheStats
      properties:
        cacheName:
          type: string
        cacheStats:
          type: string
      type: object
      xml:
        name: CacheMetricsOut
    ParsedFullNameGeoIn:
      example:
        firstName: firstName
        lastName: lastName
        prefixOrTitle: prefixOrTitle
        middleName: middleName
        id: id
        countryIso2: countryIso2
        suffix: suffix
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        prefixOrTitle:
          type: string
          xml:
            attribute: true
        suffix:
          type: string
          xml:
            attribute: true
        middleName:
          type: string
          xml:
            attribute: true
        countryIso2:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: ParsedFullNameGeoIn
    SoftwareVersionOut:
      example:
        softwareNameAndVersion: softwareNameAndVersion
        softwareVersion:
        - 0
        - 0
      properties:
        softwareNameAndVersion:
          type: string
        softwareVersion:
          items:
            format: int32
            type: integer
          type: array
      type: object
      xml:
        name: SoftwareVersionOut
    APIClassifierOut:
      properties:
        classifierName:
          type: string
        serving:
          type: boolean
        learning:
          type: boolean
        shuttingDown:
          type: boolean
        probabilityCalibrated:
          type: boolean
      type: object
      xml:
        name: APIClassifierOut
    APIPlanSubscriptionOut:
      example:
        stripeStatus: stripeStatus
        planBaseFeesKey: planBaseFeesKey
        planQuota: 5
        apiKey: apiKey
        priceUSD: 2.3021358869347654518833223846741020679473876953125
        priceOverageUSD: 7.061401241503109105224211816675961017608642578125
        planStarted: 0
        planName: planName
        planStatus: planStatus
        priceOverage: 3.61607674925191080461672754609026014804840087890625
        userId: userId
        planEnded: 1
        taxRate: 5.962133916683182377482808078639209270477294921875
        price: 9.301444243932575517419536481611430644989013671875
        currency: currency
        currencyFactor: 2.027123023002321833274663731572218239307403564453125
        stripeSubscription: stripeSubscription
        stripeCustomerId: stripeCustomerId
        priorPlanStarted: 6
      properties:
        apiKey:
          type: string
        planStarted:
          format: int64
          type: integer
        priorPlanStarted:
          format: int64
          type: integer
        planEnded:
          format: int64
          type: integer
        taxRate:
          format: double
          type: number
        planName:
          type: string
        planBaseFeesKey:
          type: string
        planStatus:
          type: string
        planQuota:
          format: int64
          type: integer
        priceUSD:
          format: double
          type: number
        priceOverageUSD:
          format: double
          type: number
        price:
          format: double
          type: number
        priceOverage:
          format: double
          type: number
        currency:
          type: string
        currencyFactor:
          format: double
          type: number
        stripeCustomerId:
          type: string
        stripeStatus:
          type: string
        stripeSubscription:
          type: string
        userId:
          type: string
      type: object
      xml:
        name: APIPlanSubscriptionOut
    FirstLastNameGenderIn:
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        gender:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: FirstLastName
    FirstLastNameGeoIn:
      example:
        firstName: firstName
        lastName: lastName
        id: id
        countryIso2: countryIso2
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        countryIso2:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: FirstLastNameGeoIn
    FirstLastNameGenderedOut:
      description: Represents the output of inferring the LIKELY gender from a personal name.
      example:
        firstName: firstName
        lastName: lastName
        genderScale: 0.80082819046101150206595775671303272247314453125
        score: 6.02745618307040320615897144307382404804229736328125
        probabilityCalibrated: 1.46581298050294517310021547018550336360931396484375
        likelyGender: male
        id: id
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        likelyGender:
          description: Most likely gender
          enum:
          - male
          - female
          - unknown
          type: string
        genderScale:
          description: Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value
          format: double
          type: number
        score:
          format: double
          type: number
        probabilityCalibrated:
          format: double
          type: number
      type: object
      xml:
        name: FirstLastNameGenderedOut
    APIKeyOut:
      example:
        striped: true
        apiKey: apiKey
        partner: true
        corporate: true
        anonymized: true
        learnable: true
        admin: true
        disabled: true
        userId: userId
        vetted: true
      properties:
        apiKey:
          type: string
          xml:
            name: api_key
        userId:
          type: string
        admin:
          type: boolean
        vetted:
          type: boolean
        learnable:
          type: boolean
        anonymized:
          type: boolean
        partner:
          type: boolean
        striped:
          type: boolean
        corporate:
          type: boolean
        disabled:
          type: boolean
      type: object
      xml:
        name: APIKeyOut
    BatchFirstLastNameDiasporaedOut:
      description: Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          score: 0.80082819046101150206595775671303272247314453125
          ethnicity: ethnicity
          lifted: true
          ethnicityAlt: ethnicityAlt
          id: id
          countryIso2: countryIso2
          ethnicitiesTop:
          - ethnicitiesTop
          - ethnicitiesTop
        - firstName: firstName
          lastName: lastName
          score: 0.80082819046101150206595775671303272247314453125
          ethnicity: ethnicity
          lifted: true
          ethnicityAlt: ethnicityAlt
          id: id
          countryIso2: countryIso2
          ethnicitiesTop:
          - ethnicitiesTop
          - ethnicitiesTop
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/FirstLastNameDiasporaedOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameDiasporaedOut
    BillingHistoryOut:
      example:
        stripeInvoices:
        - dueDate: 2000-01-23T04:56:07.000+00:00
          description: description
          isStriped: true
          tax: 7
          subTotal: 2
          invoiceDate: 2000-01-23T04:56:07.000+00:00
          userId: userId
          amountDue: 1
          invoicePdf: invoicePdf
          total: 3
          amountPaid: 5
          amountRemaining: 5
          taxPercent: 9
          invoiceId: invoiceId
          currency: currency
          attempted: true
          stripeCustomerId: stripeCustomerId
          invoiceStatus: invoiceStatus
          items:
          - itemId: itemId
            amount: 0
            quantity: 6
            planDesc: planDesc
            planNickname: planNickname
            description: description
            planName: planName
            currency: currency
            subscription: subscription
            subscriptionItem: subscriptionItem
            invoiceItemType: invoiceItemType
          - itemId: itemId
            amount: 0
            quantity: 6
            planDesc: planDesc
            planNickname: planNickname
            description: description
            planName: planName
            currency: currency
            subscription: subscription
            subscriptionItem: subscriptionItem
            invoiceItemType: invoiceItemType
          periodStart: 2000-01-23T04:56:07.000+00:00
          receiptNumber: receiptNumber
          periodEnd: 2000-01-23T04:56:07.000+00:00
        - dueDate: 2000-01-23T04:56:07.000+00:00
          description: description
          isStriped: true
          tax: 7
          subTotal: 2
          invoiceDate: 2000-01-23T04:56:07.000+00:00
          userId: userId
          amountDue: 1
          invoicePdf: invoicePdf
          total: 3
          amountPaid: 5
          amountRemaining: 5
          taxPercent: 9
          invoiceId: invoiceId
          currency: currency
          attempted: true
          stripeCustomerId: stripeCustomerId
          invoiceStatus: invoiceStatus
          items:
          - itemId: itemId
            amount: 0
            quantity: 6
            planDesc: planDesc
            planNickname: planNickname
            description: description
            planName: planName
            currency: currency
            subscription: subscription
            subscriptionItem: subscriptionItem
            invoiceItemType: invoiceItemType
          - itemId: itemId
            amount: 0
            quantity: 6
            planDesc: planDesc
            planNickname: planNickname
            description: description
            planName: planName
            currency: currency
            subscription: subscription
            subscriptionItem: subscriptionItem
            invoiceItemType: invoiceItemType
          periodStart: 2000-01-23T04:56:07.000+00:00
          receiptNumber: receiptNumber
          periodEnd: 2000-01-23T04:56:07.000+00:00
        corporateInvoices:
        - dueDate: 2000-01-23T04:56:07.000+00:00
          description: description
          isStriped: true
          tax: 7
          subTotal: 2
          invoiceDate: 2000-01-23T04:56:07.000+00:00
          userId: userId
          amountDue: 1
          invoicePdf: invoicePdf
          total: 3
          amountPaid: 5
          amountRemaining: 5
          taxPercent: 9
          invoiceId: invoiceId
          currency: currency
          attempted: true
          stripeCustomerId: stripeCustomerId
          invoiceStatus: invoiceStatus
          items:
          - itemId: itemId
            amount: 0
            quantity: 6
            planDesc: planDesc
            planNickname: planNickname
            description: description
            planName: planName
            currency: currency
            subscription: subscription
            subscriptionItem: subscriptionItem
            invoiceItemType: invoiceItemType
          - itemId: itemId
            amount: 0
            quantity: 6
            planDesc: planDesc
            planNickname: planNickname
            description: description
            planName: planName
            currency: currency
            subscription: subscription
            subscriptionItem: subscriptionItem
            invoiceItemType: invoiceItemType
          periodStart: 2000-01-23T04:56:07.000+00:00
          receiptNumber: receiptNumber
          periodEnd: 2000-01-23T04:56:07.000+00:00
        - dueDate: 2000-01-23T04:56:07.000+00:00
          description: description
          isStriped: true
          tax: 7
          subTotal: 2
          invoiceDate: 2000-01-23T04:56:07.000+00:00
          userId: userId
          amountDue: 1
          invoicePdf: invoicePdf
          total: 3
          amountPaid: 5
          amountRemaining: 5
          taxPercent: 9
          invoiceId: invoiceId
          currency: currency
          attempted: true
          stripeCustomerId: stripeCustomerId
          invoiceStatus: invoiceStatus
          items:
          - itemId: itemId
            amount: 0
            quantity: 6
            planDesc: planDesc
            planNickname: planNickname
            description: description
            planName: planName
            currency: currency
            subscription: subscription
            subscriptionItem: subscriptionItem
            invoiceItemType: invoiceItemType
          - itemId: itemId
            amount: 0
            quantity: 6
            planDesc: planDesc
            planNickname: planNickname
            description: description
            planName: planName
            currency: currency
            subscription: subscription
            subscriptionItem: subscriptionItem
            invoiceItemType: invoiceItemType
          periodStart: 2000-01-23T04:56:07.000+00:00
          receiptNumber: receiptNumber
          periodEnd: 2000-01-23T04:56:07.000+00:00
      properties:
        stripeInvoices:
          items:
            $ref: '#/components/schemas/InvoiceOut'
          type: array
        corporateInvoices:
          items:
            $ref: '#/components/schemas/InvoiceOut'
          type: array
      type: object
      xml:
        name: BillingHistoryOut
    BatchPersonalNameGeoOut:
      example:
        personalNames:
        - score: 0.80082819046101150206595775671303272247314453125
          country: country
          topRegion: topRegion
          subRegion: subRegion
          probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
          countriesTop:
          - countriesTop
          - countriesTop
          name: name
          countryAlt: countryAlt
          probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
          id: id
          region: region
        - score: 0.80082819046101150206595775671303272247314453125
          country: country
          topRegion: topRegion
          subRegion: subRegion
          probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
          countriesTop:
          - countriesTop
          - countriesTop
          name: name
          countryAlt: countryAlt
          probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
          id: id
          region: region
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/PersonalNameGeoOut'
          type: array
      type: object
      xml:
        name: BatchPersonalNameGeoOut
    APIClassifiersStatusOut:
      properties:
        softwareVersion:
          $ref: '#/components/schemas/SoftwareVersionOut'
        classifiers:
          items:
            $ref: '#/components/schemas/APIClassifierOut'
          type: array
      type: object
      xml:
        name: APIClassifiersStatusOut
    ProperNounCategorizedOut:
      example:
        score: 0.80082819046101150206595775671303272247314453125
        commonTypeAlt: commonTypeAlt
        name: name
        id: id
        commonType: commonType
      properties:
        id:
          type: string
        name:
          type: string
        commonType:
          type: string
        commonTypeAlt:
          type: string
        score:
          format: double
          type: number
      type: object
      xml:
        name: ProperNounCategorizedOut
    SourceMetricsOut:
      description: Simple metrics on a classifier, for a given source
      example:
        snapshotDate: 6
        aiLearnTotal: 2
        metricTimeStamp: 6
        aiEstimatePrecision: 6.438423552598546706349225132726132869720458984375
        aiStartTime: 1
        aiEstimateTotal: 9
        source:
          striped: true
          apiKey: apiKey
          partner: true
          corporate: true
          anonymized: true
          learnable: true
          admin: true
          disabled: true
          userId: userId
          vetted: true
        classifierName: classifierName
        aiEstimateRecall: 3.557195227068097320710649000830017030239105224609375
      properties:
        classifierName:
          type: string
        source:
          $ref: '#/components/schemas/APIKeyOut'
        aiEstimateTotal:
          format: int64
          type: integer
        aiEstimatePrecision:
          format: double
          type: number
        aiEstimateRecall:
          format: double
          type: number
        metricTimeStamp:
          format: int64
          type: integer
        aiStartTime:
          format: int64
          type: integer
        aiLearnTotal:
          format: int64
          type: integer
        snapshotDate:
          format: int64
          type: integer
      type: object
      xml:
        name: SourceMetricsOut
    PersonalNameGenderedOut:
      example:
        genderScale: 0.80082819046101150206595775671303272247314453125
        score: 6.02745618307040320615897144307382404804229736328125
        probabilityCalibrated: 1.46581298050294517310021547018550336360931396484375
        name: name
        likelyGender: male
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        likelyGender:
          description: Most likely gender
          enum:
          - male
          - female
          - unknown
          type: string
        genderScale:
          description: Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value
          format: double
          type: number
        score:
          format: double
          type: number
        probabilityCalibrated:
          format: double
          type: number
      type: object
      xml:
        name: PersonalNameGenderedOut
    FirstLastNameOriginedOut:
      description: Represents the output of inferring the LIKELY country of Origin from a personal name.
      example:
        regionOrigin: regionOrigin
        topRegionOrigin: topRegionOrigin
        firstName: firstName
        lastName: lastName
        score: 0.80082819046101150206595775671303272247314453125
        probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
        subRegionOrigin: subRegionOrigin
        probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
        countriesOriginTop:
        - countriesOriginTop
        - countriesOriginTop
        id: id
        countryOrigin: countryOrigin
        countryOriginAlt: countryOriginAlt
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        countryOrigin:
          description: Most likely country of Origin
          type: string
        countryOriginAlt:
          description: 'Second best alternative : country of Origin'
          type: string
        countriesOriginTop:
          description: List countries of Origin (top 10)
          items:
            description: List countries of Origin (top 10)
            type: string
          type: array
        score:
          description: Compatibility to NamSor_v1 Origin score value
          format: double
          type: number
        regionOrigin:
          description: Most likely region of Origin (based on countryOrigin ISO2 code)
          type: string
        topRegionOrigin:
          description: Most likely region of Origin (based on countryOrigin ISO2 code)
          type: string
        subRegionOrigin:
          description: Most likely region of Origin (based on countryOrigin ISO2 code)
          type: string
        probabilityCalibrated:
          format: double
          type: number
        probabilityAltCalibrated:
          format: double
          type: number
      type: object
      xml:
        name: FirstLastNameOriginedOut
    BatchFirstLastNameGenderIn:
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/FirstLastNameGenderIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGenderIn
    InvoiceItemOut:
      example:
        itemId: itemId
        amount: 0
        quantity: 6
        planDesc: planDesc
        planNickname: planNickname
        description: description
        planName: planName
        currency: currency
        subscription: subscription
        subscriptionItem: subscriptionItem
        invoiceItemType: invoiceItemType
      properties:
        itemId:
          type: string
        amount:
          format: int64
          type: integer
        currency:
          type: string
        description:
          type: string
        quantity:
          format: int64
          type: integer
        subscription:
          type: string
        subscriptionItem:
          type: string
        invoiceItemType:
          type: string
        planNickname:
          type: string
        planDesc:
          type: string
        planName:
          type: string
      type: object
      xml:
        name: InvoiceItemOut
    BatchNameMatchedOut:
      properties:
        matchedNames:
          items:
            $ref: '#/components/schemas/NameMatchedOut'
          type: array
      type: object
      xml:
        name: BatchNameMatchedOut
    DeployUIOut:
      properties:
        errorMessage:
          type: string
        succeeded:
          type: boolean
      type: object
      xml:
        name: DeployUIOut
    BatchNameMatchCandidatesOut:
      example:
        namesAndMatchCandidates:
        - firstName: firstName
          lastName: lastName
          matchCandidates:
          - candidateName: candidateName
            probability: 0.80082819046101150206595775671303272247314453125
          - candidateName: candidateName
            probability: 0.80082819046101150206595775671303272247314453125
          id: id
        - firstName: firstName
          lastName: lastName
          matchCandidates:
          - candidateName: candidateName
            probability: 0.80082819046101150206595775671303272247314453125
          - candidateName: candidateName
            probability: 0.80082819046101150206595775671303272247314453125
          id: id
      properties:
        namesAndMatchCandidates:
          items:
            $ref: '#/components/schemas/NameMatchCandidatesOut'
          type: array
      type: object
      xml:
        name: BatchNameMatchCandidatesOut
    BatchPersonalNameParsedOut:
      example:
        personalNames:
        - score: 0.80082819046101150206595775671303272247314453125
          firstLastName:
            firstName: firstName
            lastName: lastName
            id: id
          name: name
          id: id
          nameParserTypeAlt: nameParserTypeAlt
          nameParserType: nameParserType
        - score: 0.80082819046101150206595775671303272247314453125
          firstLastName:
            firstName: firstName
            lastName: lastName
            id: id
          name: name
          id: id
          nameParserTypeAlt: nameParserTypeAlt
          nameParserType: nameParserType
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/PersonalNameParsedOut'
          type: array
      type: object
      xml:
        name: BatchPersonalNameParsedOut
    FirstLastNameDiasporaedOut:
      description: Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.
      example:
        firstName: firstName
        lastName: lastName
        score: 0.80082819046101150206595775671303272247314453125
        ethnicity: ethnicity
        lifted: true
        ethnicityAlt: ethnicityAlt
        id: id
        countryIso2: countryIso2
        ethnicitiesTop:
        - ethnicitiesTop
        - ethnicitiesTop
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        score:
          description: Compatibility to NamSor_v1 Origin score value
          format: double
          type: number
        ethnicityAlt:
          type: string
          xml:
            attribute: true
        ethnicity:
          type: string
          xml:
            attribute: true
        lifted:
          type: boolean
          xml:
            attribute: true
        countryIso2:
          type: string
          xml:
            attribute: true
        ethnicitiesTop:
          description: List ethnicities (top 10)
          items:
            description: List ethnicities (top 10)
            type: string
          type: array
      type: object
      xml:
        name: FirstLastNameDiasporaedOut
    BatchPersonalNameGenderedOut:
      example:
        personalNames:
        - genderScale: 0.80082819046101150206595775671303272247314453125
          score: 6.02745618307040320615897144307382404804229736328125
          probabilityCalibrated: 1.46581298050294517310021547018550336360931396484375
          name: name
          likelyGender: male
          id: id
        - genderScale: 0.80082819046101150206595775671303272247314453125
          score: 6.02745618307040320615897144307382404804229736328125
          probabilityCalibrated: 1.46581298050294517310021547018550336360931396484375
          name: name
          likelyGender: male
          id: id
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/PersonalNameGenderedOut'
          type: array
      type: object
      xml:
        name: BatchPersonalNameGenderedOut
    FeedbackLoopOut:
      properties:
        feedbackCredits:
          format: int64
          type: integer
      type: object
      xml:
        name: FeedbackLoopOut
    APIBillingPeriodUsageOut:
      example:
        apiKey: apiKey
        periodStarted: 6
        stripeCurrentPeriodEnd: 5
        usage: 2
        hardLimit: 9
        subscriptionStarted: 0
        periodEnded: 1
        billingStatus: billingStatus
        stripeCurrentPeriodStart: 5
        softLimit: 7
      properties:
        apiKey:
          type: string
        subscriptionStarted:
          format: int64
          type: integer
        periodStarted:
          format: int64
          type: integer
        periodEnded:
          format: int64
          type: integer
        stripeCurrentPeriodEnd:
          format: int64
          type: integer
        stripeCurrentPeriodStart:
          format: int64
          type: integer
        billingStatus:
          type: string
        usage:
          format: int64
          type: integer
        softLimit:
          format: int64
          type: integer
        hardLimit:
          format: int64
          type: integer
      type: object
      xml:
        name: APIBillingPeriodUsageOut
    APIPeriodUsageOut:
      example:
        overageInclTax: 2.027123023002321833274663731572218239307403564453125
        overageQuantity: 4
        billingPeriod:
          apiKey: apiKey
          periodStarted: 6
          stripeCurrentPeriodEnd: 5
          usage: 2
          hardLimit: 9
          subscriptionStarted: 0
          periodEnded: 1
          billingStatus: billingStatus
          stripeCurrentPeriodStart: 5
          softLimit: 7
        overageCurrency: overageCurrency
        subscription:
          stripeStatus: stripeStatus
          planBaseFeesKey: planBaseFeesKey
          planQuota: 5
          apiKey: apiKey
          priceUSD: 2.3021358869347654518833223846741020679473876953125
          priceOverageUSD: 7.061401241503109105224211816675961017608642578125
          planStarted: 0
          planName: planName
          planStatus: planStatus
          priceOverage: 3.61607674925191080461672754609026014804840087890625
          userId: userId
          planEnded: 1
          taxRate: 5.962133916683182377482808078639209270477294921875
          price: 9.301444243932575517419536481611430644989013671875
          currency: currency
          currencyFactor: 2.027123023002321833274663731572218239307403564453125
          stripeSubscription: stripeSubscription
          stripeCustomerId: stripeCustomerId
          priorPlanStarted: 6
        overageExclTax: 3.61607674925191080461672754609026014804840087890625
      properties:
        subscription:
          $ref: '#/components/schemas/APIPlanSubscriptionOut'
        billingPeriod:
          $ref: '#/components/schemas/APIBillingPeriodUsageOut'
        overageExclTax:
          format: double
          type: number
        overageInclTax:
          format: double
          type: number
        overageCurrency:
          type: string
        overageQuantity:
          format: int64
          type: integer
      type: object
      xml:
        name: APICurrentUsageOut
    PersonalNameIn:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: PersonalNameIn
    NamSorCounterOut:
      properties:
        counter:
          format: int64
          type: integer
      type: object
      xml:
        name: NamSorCounterOut
    SourceDetailedMetricsOut:
      description: Simple metrics on source, with details by classifier.
      properties:
        classifierName:
          type: string
        source:
          $ref: '#/components/schemas/APIKeyOut'
        aiEstimateTotal:
          format: int64
          type: integer
        aiEstimatePrecision:
          format: double
          type: number
        aiEstimateRecall:
          format: double
          type: number
        metricTimeStamp:
          format: int64
          type: integer
        aiStartTime:
          format: int64
          type: integer
        aiLearnTotal:
          format: int64
          type: integer
        snapshotDate:
          format: int64
          type: integer
        expectedClassMetrics:
          items:
            $ref: '#/components/schemas/ExpectedClassMetricsOut'
          type: array
      type: object
      xml:
        name: SourceDetailedMetricsOut
    APIUsageAggregatedOut:
      properties:
        timeUnit:
          type: string
        periodStart:
          format: int64
          type: integer
        periodEnd:
          format: int64
          type: integer
        totalUsage:
          format: int64
          type: integer
        historyTruncated:
          type: boolean
        data:
          items:
            items:
              format: int32
              type: integer
            type: array
          type: array
        colHeaders:
          items:
            type: string
          type: array
        rowHeaders:
          items:
            type: string
          type: array
      type: object
      xml:
        name: APIUsageAggregatedOut
    APIServicesOut:
      properties:
        apiServices:
          items:
            $ref: '#/components/schemas/APIServiceOut'
          type: array
      type: object
      xml:
        name: APIServicesOut
    InvoiceOut:
      example:
        dueDate: 2000-01-23T04:56:07.000+00:00
        description: description
        isStriped: true
        tax: 7
        subTotal: 2
        invoiceDate: 2000-01-23T04:56:07.000+00:00
        userId: userId
        amountDue: 1
        invoicePdf: invoicePdf
        total: 3
        amountPaid: 5
        amountRemaining: 5
        taxPercent: 9
        invoiceId: invoiceId
        currency: currency
        attempted: true
        stripeCustomerId: stripeCustomerId
        invoiceStatus: invoiceStatus
        items:
        - itemId: itemId
          amount: 0
          quantity: 6
          planDesc: planDesc
          planNickname: planNickname
          description: description
          planName: planName
          currency: currency
          subscription: subscription
          subscriptionItem: subscriptionItem
          invoiceItemType: invoiceItemType
        - itemId: itemId
          amount: 0
          quantity: 6
          planDesc: planDesc
          planNickname: planNickname
          description: description
          planName: planName
          currency: currency
          subscription: subscription
          subscriptionItem: subscriptionItem
          invoiceItemType: invoiceItemType
        periodStart: 2000-01-23T04:56:07.000+00:00
        receiptNumber: receiptNumber
        periodEnd: 2000-01-23T04:56:07.000+00:00
      properties:
        items:
          items:
            $ref: '#/components/schemas/InvoiceItemOut'
          type: array
        userId:
          type: string
        invoiceId:
          type: string
        isStriped:
          type: boolean
        stripeCustomerId:
          type: string
        amountDue:
          format: int64
          type: integer
        amountPaid:
          format: int64
          type: integer
        amountRemaining:
          format: int64
          type: integer
        attempted:
          type: boolean
        currency:
          type: string
        invoiceDate:
          format: date-time
          type: string
        dueDate:
          format: date-time
          type: string
        description:
          type: string
        invoicePdf:
          type: string
        periodStart:
          format: date-time
          type: string
        periodEnd:
          format: date-time
          type: string
        receiptNumber:
          type: string
        invoiceStatus:
          type: string
        subTotal:
          format: int64
          type: integer
        tax:
          format: int64
          type: integer
        taxPercent:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
      type: object
      xml:
        name: InvoiceOut
    FirstLastNameOut:
      example:
        firstName: firstName
        lastName: lastName
        id: id
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      type: object
      xml:
        name: FirstLastNameOut
    BatchFirstLastNameUSRaceEthnicityOut:
      description: Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          raceEthnicityAlt: W_NL
          score: 0.80082819046101150206595775671303272247314453125
          raceEthnicitiesTop:
          - raceEthnicitiesTop
          - raceEthnicitiesTop
          probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
          probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
          id: id
          raceEthnicity: W_NL
        - firstName: firstName
          lastName: lastName
          raceEthnicityAlt: W_NL
          score: 0.80082819046101150206595775671303272247314453125
          raceEthnicitiesTop:
          - raceEthnicitiesTop
          - raceEthnicitiesTop
          probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
          probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
          id: id
          raceEthnicity: W_NL
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/FirstLastNameUSRaceEthnicityOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameUSRaceEthnicityOut
    SystemMetricsOut:
      example:
        sourceMetrics:
        - snapshotDate: 6
          aiLearnTotal: 2
          metricTimeStamp: 6
          aiEstimatePrecision: 6.438423552598546706349225132726132869720458984375
          aiStartTime: 1
          aiEstimateTotal: 9
          source:
            striped: true
            apiKey: apiKey
            partner: true
            corporate: true
            anonymized: true
            learnable: true
            admin: true
            disabled: true
            userId: userId
            vetted: true
          classifierName: classifierName
          aiEstimateRecall: 3.557195227068097320710649000830017030239105224609375
        - snapshotDate: 6
          aiLearnTotal: 2
          metricTimeStamp: 6
          aiEstimatePrecision: 6.438423552598546706349225132726132869720458984375
          aiStartTime: 1
          aiEstimateTotal: 9
          source:
            striped: true
            apiKey: apiKey
            partner: true
            corporate: true
            anonymized: true
            learnable: true
            admin: true
            disabled: true
            userId: userId
            vetted: true
          classifierName: classifierName
          aiEstimateRecall: 3.557195227068097320710649000830017030239105224609375
        totalMem: 6
        cacheMetrics:
        - cacheName: cacheName
          cacheStats: cacheStats
        - cacheName: cacheName
          cacheStats: cacheStats
        freeMem: 5
        classifierMetrics:
        - featuresSize: 2
          aiNonVettedExpectedClassMetrics:
          - aiLearnTotal: 8
            aiEstimatePrecision: 9.3693102714106686335071572102606296539306640625
            expectedClass: expectedClass
            aiEstimateTotal: 9
            classifierName: classifierName
            aiEstimateRecall: 6.683562403749608193948006373830139636993408203125
          - aiLearnTotal: 8
            aiEstimatePrecision: 9.3693102714106686335071572102606296539306640625
            expectedClass: expectedClass
            aiEstimateTotal: 9
            classifierName: classifierName
            aiEstimateRecall: 6.683562403749608193948006373830139636993408203125
          aiVettedEstimatePrecision: 7.3862819483858839220147274318151175975799560546875
          aiStartTime: 5
          aiVettedExpectedClassMetrics:
          - aiLearnTotal: 8
            aiEstimatePrecision: 9.3693102714106686335071572102606296539306640625
            expectedClass: expectedClass
            aiEstimateTotal: 9
            classifierName: classifierName
            aiEstimateRecall: 6.683562403749608193948006373830139636993408203125
          - aiLearnTotal: 8
            aiEstimatePrecision: 9.3693102714106686335071572102606296539306640625
            expectedClass: expectedClass
            aiEstimateTotal: 9
            classifierName: classifierName
            aiEstimateRecall: 6.683562403749608193948006373830139636993408203125
          classifyDurationsCurrent: 2.3021358869347654518833223846741020679473876953125
          learnDurationsCurrent: 9.301444243932575517419536481611430644989013671875
          aiNonVettedEstimatePrecision: 6.8468526983526398765889098285697400569915771484375
          classifierName: classifierName
          classifyDurationsSummary: 7.061401241503109105224211816675961017608642578125
          factsLearned: 5
          aiNonVettedEstimateTotal: 1
          aiVettedLearnTotal: 1
          learnDurationsSummary: 3.61607674925191080461672754609026014804840087890625
          aiVettedEstimateRecall: 1.231513536777255612975068288506008684635162353515625
          learnQueueSize: 0
          metricTimeStamp: 4
          aiNonVettedEstimateRecall: 7.4577447736837658709418974467553198337554931640625
          preClassifyQueueSize: 1
          hostAddress: hostAddress
          aiNonVettedLearnTotal: 1
          factKeysSize: 5
          softwareVersion: softwareVersion
          bufferSize: 6
          aiVettedEstimateTotal: 4
        - featuresSize: 2
          aiNonVettedExpectedClassMetrics:
          - aiLearnTotal: 8
            aiEstimatePrecision: 9.3693102714106686335071572102606296539306640625
            expectedClass: expectedClass
            aiEstimateTotal: 9
            classifierName: classifierName
            aiEstimateRecall: 6.683562403749608193948006373830139636993408203125
          - aiLearnTotal: 8
            aiEstimatePrecision: 9.3693102714106686335071572102606296539306640625
            expectedClass: expectedClass
            aiEstimateTotal: 9
            classifierName: classifierName
            aiEstimateRecall: 6.683562403749608193948006373830139636993408203125
          aiVettedEstimatePrecision: 7.3862819483858839220147274318151175975799560546875
          aiStartTime: 5
          aiVettedExpectedClassMetrics:
          - aiLearnTotal: 8
            aiEstimatePrecision: 9.3693102714106686335071572102606296539306640625
            expectedClass: expectedClass
            aiEstimateTotal: 9
            classifierName: classifierName
            aiEstimateRecall: 6.683562403749608193948006373830139636993408203125
          - aiLearnTotal: 8
            aiEstimatePrecision: 9.3693102714106686335071572102606296539306640625
            expectedClass: expectedClass
            aiEstimateTotal: 9
            classifierName: classifierName
            aiEstimateRecall: 6.683562403749608193948006373830139636993408203125
          classifyDurationsCurrent: 2.3021358869347654518833223846741020679473876953125
          learnDurationsCurrent: 9.301444243932575517419536481611430644989013671875
          aiNonVettedEstimatePrecision: 6.8468526983526398765889098285697400569915771484375
          classifierName: classifierName
          classifyDurationsSummary: 7.061401241503109105224211816675961017608642578125
          factsLearned: 5
          aiNonVettedEstimateTotal: 1
          aiVettedLearnTotal: 1
          learnDurationsSummary: 3.61607674925191080461672754609026014804840087890625
          aiVettedEstimateRecall: 1.231513536777255612975068288506008684635162353515625
          learnQueueSize: 0
          metricTimeStamp: 4
          aiNonVettedEstimateRecall: 7.4577447736837658709418974467553198337554931640625
          preClassifyQueueSize: 1
          hostAddress: hostAddress
          aiNonVettedLearnTotal: 1
          factKeysSize: 5
          softwareVersion: softwareVersion
          bufferSize: 6
          aiVettedEstimateTotal: 4
        maxMem: 6
      properties:
        cacheMetrics:
          items:
            $ref: '#/components/schemas/CacheMetricsOut'
          type: array
        classifierMetrics:
          items:
            $ref: '#/components/schemas/ClassifierMetricsOut'
          type: array
        sourceMetrics:
          items:
            $ref: '#/components/schemas/SourceMetricsOut'
          type: array
        totalMem:
          format: int64
          type: integer
        freeMem:
          format: int64
          type: integer
        maxMem:
          format: int64
          type: integer
      type: object
      xml:
        name: SystemMetricsOut
    BatchPersonalNameIn:
      example:
        personalNames:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/PersonalNameIn'
          type: array
      type: object
      xml:
        name: BatchPersonalNameIn
    BatchFirstLastNamePhoneNumberIn:
      example:
        personalNamesWithPhoneNumbers:
        - firstName: firstName
          lastName: lastName
          phoneNumber: phoneNumber
          id: id
          FirstLastNameOriginedOut:
            regionOrigin: regionOrigin
            topRegionOrigin: topRegionOrigin
            firstName: firstName
            lastName: lastName
            score: 0.80082819046101150206595775671303272247314453125
            probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
            subRegionOrigin: subRegionOrigin
            probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
            countriesOriginTop:
            - countriesOriginTop
            - countriesOriginTop
            id: id
            countryOrigin: countryOrigin
            countryOriginAlt: countryOriginAlt
        - firstName: firstName
          lastName: lastName
          phoneNumber: phoneNumber
          id: id
          FirstLastNameOriginedOut:
            regionOrigin: regionOrigin
            topRegionOrigin: topRegionOrigin
            firstName: firstName
            lastName: lastName
            score: 0.80082819046101150206595775671303272247314453125
            probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
            subRegionOrigin: subRegionOrigin
            probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
            countriesOriginTop:
            - countriesOriginTop
            - countriesOriginTop
            id: id
            countryOrigin: countryOrigin
            countryOriginAlt: countryOriginAlt
      properties:
        personalNamesWithPhoneNumbers:
          items:
            $ref: '#/components/schemas/FirstLastNamePhoneNumberIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNamePhoneNumberIn
    APIPlansOut:
      example:
        plans:
        - planQuota: 6
          price: 1.46581298050294517310021547018550336360931396484375
          planName: planName
          priceOverage: 5.962133916683182377482808078639209270477294921875
        - planQuota: 6
          price: 1.46581298050294517310021547018550336360931396484375
          planName: planName
          priceOverage: 5.962133916683182377482808078639209270477294921875
        currencyIso3: currencyIso3
        currencySymbol: currencySymbol
        usageRatioForDupplicates: 0
      properties:
        usageRatioForDupplicates:
          format: int64
          type: integer
        currencyIso3:
          type: string
        currencySymbol:
          type: string
        plans:
          items:
            $ref: '#/components/schemas/APIPlanOut'
          type: array
      type: object
      xml:
        name: APIPlansOut
    FirstLastNamePhoneCodedOut:
      description: Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.
      example:
        lastName: lastName
        originCountryIso2Alt: originCountryIso2Alt
        phoneCountryIso2Verified: phoneCountryIso2Verified
        verified: true
        firstName: firstName
        score: 1.46581298050294517310021547018550336360931396484375
        phoneNumber: phoneNumber
        phoneCountryCode: 0
        phoneCountryIso2: phoneCountryIso2
        originCountryIso2: originCountryIso2
        phoneCountryIso2Alt: phoneCountryIso2Alt
        id: id
        internationalPhoneNumberVerified: internationalPhoneNumberVerified
        phoneCountryCodeAlt: 6
        countryIso2: countryIso2
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        internationalPhoneNumberVerified:
          type: string
        phoneCountryIso2Verified:
          type: string
        phoneCountryCode:
          format: int32
          type: integer
        phoneCountryCodeAlt:
          format: int32
          type: integer
        phoneCountryIso2:
          type: string
        phoneCountryIso2Alt:
          type: string
        originCountryIso2:
          type: string
        originCountryIso2Alt:
          type: string
        phoneNumber:
          type: string
        verified:
          type: boolean
        score:
          format: double
          type: number
        countryIso2:
          type: string
      type: object
      xml:
        name: FirstLastNamePhoneCodedOut
    MatchPersonalFirstLastNameIn:
      properties:
        id:
          type: string
          xml:
            attribute: true
        name1:
          $ref: '#/components/schemas/FirstLastNameIn'
        name2:
          $ref: '#/components/schemas/PersonalNameIn'
        name:
          type: string
      type: object
      xml:
        name: MatchPersonalFirstLastNameIn
    PersonalNameParsedOut:
      example:
        score: 0.80082819046101150206595775671303272247314453125
        firstLastName:
          firstName: firstName
          lastName: lastName
          id: id
        name: name
        id: id
        nameParserTypeAlt: nameParserTypeAlt
        nameParserType: nameParserType
      properties:
        id:
          type: string
        name:
          type: string
        nameParserType:
          type: string
        nameParserTypeAlt:
          type: string
        firstLastName:
          $ref: '#/components/schemas/FirstLastNameOut'
        score:
          format: double
          type: number
      type: object
      xml:
        name: PersonalNameParsedOut
    ExpectedClassMetricsOut:
      description: Simple metrics on a classifier, for a given expected class
      example:
        aiLearnTotal: 8
        aiEstimatePrecision: 9.3693102714106686335071572102606296539306640625
        expectedClass: expectedClass
        aiEstimateTotal: 9
        classifierName: classifierName
        aiEstimateRecall: 6.683562403749608193948006373830139636993408203125
      properties:
        classifierName:
          type: string
        expectedClass:
          type: string
        aiEstimateTotal:
          format: int64
          type: integer
        aiEstimatePrecision:
          format: double
          type: number
        aiEstimateRecall:
          format: double
          type: number
        aiLearnTotal:
          format: int64
          type: integer
      type: object
      xml:
        name: ExpectedClassMetricsOut
    BatchFirstLastNameGeoZippedIn:
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          zipCode: zipCode
          id: id
          countryIso2: countryIso2
        - firstName: firstName
          lastName: lastName
          zipCode: zipCode
          id: id
          countryIso2: countryIso2
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/FirstLastNameGeoZippedIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGeoZippedIn
    BatchFirstLastNameOriginedOut:
      description: Represents the output of inferring the LIKELY origin from a list of personal names.
      example:
        personalNames:
        - regionOrigin: regionOrigin
          topRegionOrigin: topRegionOrigin
          firstName: firstName
          lastName: lastName
          score: 0.80082819046101150206595775671303272247314453125
          probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
          subRegionOrigin: subRegionOrigin
          probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
          countriesOriginTop:
          - countriesOriginTop
          - countriesOriginTop
          id: id
          countryOrigin: countryOrigin
          countryOriginAlt: countryOriginAlt
        - regionOrigin: regionOrigin
          topRegionOrigin: topRegionOrigin
          firstName: firstName
          lastName: lastName
          score: 0.80082819046101150206595775671303272247314453125
          probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
          subRegionOrigin: subRegionOrigin
          probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
          countriesOriginTop:
          - countriesOriginTop
          - countriesOriginTop
          id: id
          countryOrigin: countryOrigin
          countryOriginAlt: countryOriginAlt
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/FirstLastNameOriginedOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameOriginedOut
    FirstLastNameGeoZippedIn:
      example:
        firstName: firstName
        lastName: lastName
        zipCode: zipCode
        id: id
        countryIso2: countryIso2
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        countryIso2:
          type: string
          xml:
            attribute: true
        zipCode:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: FirstLastNameGeoZippedIn
    BatchPersonalNameGeoIn:
      example:
        personalNames:
        - name: name
          id: id
          countryIso2: countryIso2
        - name: name
          id: id
          countryIso2: countryIso2
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/PersonalNameGeoIn'
          type: array
      type: object
      xml:
        name: BatchPersonalNameGeoIn
    FirstLastNameIn:
      example:
        firstName: firstName
        lastName: lastName
        id: id
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: FirstLastName
    APIClassifierTaxonomyOut:
      properties:
        classifierName:
          type: string
        taxonomyClasses:
          items:
            type: string
          type: array
      type: object
      xml:
        name: APIClassifierTaxonomyOut
    NameMatchCandidateOut:
      example:
        candidateName: candidateName
        probability: 0.80082819046101150206595775671303272247314453125
      properties:
        candidateName:
          type: string
        probability:
          format: double
          type: number
      type: object
      xml:
        name: NameMatchCandidateOut
    StripeCustomerOut:
      properties:
        stripeCustomerId:
          type: string
        sourceCountry:
          type: string
        sourceCurrency:
          type: string
        stripedCards:
          items:
            $ref: '#/components/schemas/StripeCardOut'
          type: array
      type: object
      xml:
        name: StripeCustomerOut
    BatchFirstLastNamePhoneCodedOut:
      description: Represents the output of inferring the LIKELY country and phone code of personal names+phones.
      example:
        personalNamesWithPhoneNumbers:
        - lastName: lastName
          originCountryIso2Alt: originCountryIso2Alt
          phoneCountryIso2Verified: phoneCountryIso2Verified
          verified: true
          firstName: firstName
          score: 1.46581298050294517310021547018550336360931396484375
          phoneNumber: phoneNumber
          phoneCountryCode: 0
          phoneCountryIso2: phoneCountryIso2
          originCountryIso2: originCountryIso2
          phoneCountryIso2Alt: phoneCountryIso2Alt
          id: id
          internationalPhoneNumberVerified: internationalPhoneNumberVerified
          phoneCountryCodeAlt: 6
          countryIso2: countryIso2
        - lastName: lastName
          originCountryIso2Alt: originCountryIso2Alt
          phoneCountryIso2Verified: phoneCountryIso2Verified
          verified: true
          firstName: firstName
          score: 1.46581298050294517310021547018550336360931396484375
          phoneNumber: phoneNumber
          phoneCountryCode: 0
          phoneCountryIso2: phoneCountryIso2
          originCountryIso2: originCountryIso2
          phoneCountryIso2Alt: phoneCountryIso2Alt
          id: id
          internationalPhoneNumberVerified: internationalPhoneNumberVerified
          phoneCountryCodeAlt: 6
          countryIso2: countryIso2
      properties:
        personalNamesWithPhoneNumbers:
          items:
            $ref: '#/components/schemas/FirstLastNamePhoneCodedOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNamePhoneCodedOut
    FirstLastNameUSRaceEthnicityOut:
      description: Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.
      example:
        firstName: firstName
        lastName: lastName
        raceEthnicityAlt: W_NL
        score: 0.80082819046101150206595775671303272247314453125
        raceEthnicitiesTop:
        - raceEthnicitiesTop
        - raceEthnicitiesTop
        probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
        probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
        id: id
        raceEthnicity: W_NL
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        raceEthnicityAlt:
          description: Second most likely US 'race'/ethnicity
          enum:
          - W_NL
          - HL
          - A
          - B_NL
          type: string
          xml:
            attribute: true
        raceEthnicity:
          description: Most likely US 'race'/ethnicity
          enum:
          - W_NL
          - HL
          - A
          - B_NL
          type: string
          xml:
            attribute: true
        score:
          description: Compatibility to NamSor_v1 Origin score value
          format: double
          type: number
        raceEthnicitiesTop:
          description: List 'race'/ethnicities
          items:
            description: List 'race'/ethnicities
            type: string
          type: array
        probabilityCalibrated:
          format: double
          type: number
        probabilityAltCalibrated:
          format: double
          type: number
      type: object
      xml:
        name: FirstLastNameUSRaceEthnicityOut
    BatchFirstLastNamePhoneNumberGeoIn:
      example:
        personalNamesWithPhoneNumbers:
        - firstName: firstName
          lastName: lastName
          phoneNumber: phoneNumber
          countryIso2Alt: countryIso2Alt
          id: id
          countryIso2: countryIso2
          FirstLastNameOriginedOut:
            regionOrigin: regionOrigin
            topRegionOrigin: topRegionOrigin
            firstName: firstName
            lastName: lastName
            score: 0.80082819046101150206595775671303272247314453125
            probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
            subRegionOrigin: subRegionOrigin
            probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
            countriesOriginTop:
            - countriesOriginTop
            - countriesOriginTop
            id: id
            countryOrigin: countryOrigin
            countryOriginAlt: countryOriginAlt
        - firstName: firstName
          lastName: lastName
          phoneNumber: phoneNumber
          countryIso2Alt: countryIso2Alt
          id: id
          countryIso2: countryIso2
          FirstLastNameOriginedOut:
            regionOrigin: regionOrigin
            topRegionOrigin: topRegionOrigin
            firstName: firstName
            lastName: lastName
            score: 0.80082819046101150206595775671303272247314453125
            probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
            subRegionOrigin: subRegionOrigin
            probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
            countriesOriginTop:
            - countriesOriginTop
            - countriesOriginTop
            id: id
            countryOrigin: countryOrigin
            countryOriginAlt: countryOriginAlt
      properties:
        personalNamesWithPhoneNumbers:
          items:
            $ref: '#/components/schemas/FirstLastNamePhoneNumberGeoIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNamePhoneNumberGeoIn
    BatchParsedFullNameIn:
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          prefixOrTitle: prefixOrTitle
          middleName: middleName
          id: id
          suffix: suffix
        - firstName: firstName
          lastName: lastName
          prefixOrTitle: prefixOrTitle
          middleName: middleName
          id: id
          suffix: suffix
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/ParsedFullNameIn'
          type: array
      type: object
      xml:
        name: BatchParsedFullNameIn
    PersonalNameGeoIn:
      example:
        name: name
        id: id
        countryIso2: countryIso2
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
        countryIso2:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: PersonalNameGeoIn
    APIServiceOut:
      properties:
        serviceName:
          type: string
        serviceGroup:
          type: string
        costInUnits:
          format: int32
          type: integer
      type: object
      xml:
        name: APIServiceOut
    BatchFirstLastNameIn:
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          id: id
        - firstName: firstName
          lastName: lastName
          id: id
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/FirstLastNameIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameIn
    ParsedFullNameIn:
      example:
        firstName: firstName
        lastName: lastName
        prefixOrTitle: prefixOrTitle
        middleName: middleName
        id: id
        suffix: suffix
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        prefixOrTitle:
          type: string
          xml:
            attribute: true
        suffix:
          type: string
          xml:
            attribute: true
        middleName:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: ParsedFullNameIn
    RomanizedNameOut:
      example:
        originalName: originalName
        score: 0.80082819046101150206595775671303272247314453125
        sourceScript: sourceScript
        targetLanguage: targetLanguage
        id: id
        targetScript: targetScript
        latinName: latinName
        sourceLanguage: sourceLanguage
      properties:
        id:
          type: string
        latinName:
          type: string
        originalName:
          type: string
        sourceLanguage:
          type: string
        targetLanguage:
          type: string
        sourceScript:
          type: string
        targetScript:
          type: string
        score:
          format: double
          type: number
      type: object
      xml:
        name: RomanizedNameOut
    NameMatchedOut:
      properties:
        id:
          type: string
        matchStatus:
          type: string
        score:
          format: double
          type: number
      type: object
      xml:
        name: NameMatchedOut
    BatchMatchPersonalFirstLastNameIn:
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/MatchPersonalFirstLastNameIn'
          type: array
      type: object
      xml:
        name: BatchMatchPersonalFirstLastNameIn
    FirstLastNamePhoneNumberGeoIn:
      example:
        firstName: firstName
        lastName: lastName
        phoneNumber: phoneNumber
        countryIso2Alt: countryIso2Alt
        id: id
        countryIso2: countryIso2
        FirstLastNameOriginedOut:
          regionOrigin: regionOrigin
          topRegionOrigin: topRegionOrigin
          firstName: firstName
          lastName: lastName
          score: 0.80082819046101150206595775671303272247314453125
          probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
          subRegionOrigin: subRegionOrigin
          probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
          countriesOriginTop:
          - countriesOriginTop
          - countriesOriginTop
          id: id
          countryOrigin: countryOrigin
          countryOriginAlt: countryOriginAlt
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        phoneNumber:
          type: string
        FirstLastNameOriginedOut:
          $ref: '#/components/schemas/FirstLastNameOriginedOut'
        countryIso2:
          type: string
        countryIso2Alt:
          type: string
      type: object
      xml:
        name: FirstLastNamePhoneNumberGeoIn
    ClassifierMetricsOut:
      description: Simple metrics on a classifier
      example:
        featuresSize: 2
        aiNonVettedExpectedClassMetrics:
        - aiLearnTotal: 8
          aiEstimatePrecision: 9.3693102714106686335071572102606296539306640625
          expectedClass: expectedClass
          aiEstimateTotal: 9
          classifierName: classifierName
          aiEstimateRecall: 6.683562403749608193948006373830139636993408203125
        - aiLearnTotal: 8
          aiEstimatePrecision: 9.3693102714106686335071572102606296539306640625
          expectedClass: expectedClass
          aiEstimateTotal: 9
          classifierName: classifierName
          aiEstimateRecall: 6.683562403749608193948006373830139636993408203125
        aiVettedEstimatePrecision: 7.3862819483858839220147274318151175975799560546875
        aiStartTime: 5
        aiVettedExpectedClassMetrics:
        - aiLearnTotal: 8
          aiEstimatePrecision: 9.3693102714106686335071572102606296539306640625
          expectedClass: expectedClass
          aiEstimateTotal: 9
          classifierName: classifierName
          aiEstimateRecall: 6.683562403749608193948006373830139636993408203125
        - aiLearnTotal: 8
          aiEstimatePrecision: 9.3693102714106686335071572102606296539306640625
          expectedClass: expectedClass
          aiEstimateTotal: 9
          classifierName: classifierName
          aiEstimateRecall: 6.683562403749608193948006373830139636993408203125
        classifyDurationsCurrent: 2.3021358869347654518833223846741020679473876953125
        learnDurationsCurrent: 9.301444243932575517419536481611430644989013671875
        aiNonVettedEstimatePrecision: 6.8468526983526398765889098285697400569915771484375
        classifierName: classifierName
        classifyDurationsSummary: 7.061401241503109105224211816675961017608642578125
        factsLearned: 5
        aiNonVettedEstimateTotal: 1
        aiVettedLearnTotal: 1
        learnDurationsSummary: 3.61607674925191080461672754609026014804840087890625
        aiVettedEstimateRecall: 1.231513536777255612975068288506008684635162353515625
        learnQueueSize: 0
        metricTimeStamp: 4
        aiNonVettedEstimateRecall: 7.4577447736837658709418974467553198337554931640625
        preClassifyQueueSize: 1
        hostAddress: hostAddress
        aiNonVettedLearnTotal: 1
        factKeysSize: 5
        softwareVersion: softwareVersion
        bufferSize: 6
        aiVettedEstimateTotal: 4
      properties:
        softwareVersion:
          type: string
        hostAddress:
          type: string
        learnQueueSize:
          format: int32
          type: integer
        bufferSize:
          format: int32
          type: integer
        preClassifyQueueSize:
          format: int32
          type: integer
        factKeysSize:
          format: int32
          type: integer
        factsLearned:
          format: int64
          type: integer
        classifyDurationsCurrent:
          format: double
          type: number
        classifyDurationsSummary:
          format: double
          type: number
        learnDurationsCurrent:
          format: double
          type: number
        learnDurationsSummary:
          format: double
          type: number
        classifierName:
          type: string
        featuresSize:
          format: int64
          type: integer
        aiVettedEstimateTotal:
          format: int64
          type: integer
        aiVettedEstimatePrecision:
          format: double
          type: number
        aiVettedEstimateRecall:
          format: double
          type: number
        aiVettedLearnTotal:
          format: int64
          type: integer
        aiNonVettedEstimateTotal:
          format: int64
          type: integer
        aiNonVettedEstimatePrecision:
          format: double
          type: number
        aiNonVettedEstimateRecall:
          format: double
          type: number
        aiNonVettedLearnTotal:
          format: int64
          type: integer
        metricTimeStamp:
          format: int64
          type: integer
        aiStartTime:
          format: int64
          type: integer
        aiVettedExpectedClassMetrics:
          items:
            $ref: '#/components/schemas/ExpectedClassMetricsOut'
          type: array
        aiNonVettedExpectedClassMetrics:
          items:
            $ref: '#/components/schemas/ExpectedClassMetricsOut'
          type: array
      type: object
      xml:
        name: ClassifierMetricsOut
    PersonalNameGeoOut:
      example:
        score: 0.80082819046101150206595775671303272247314453125
        country: country
        topRegion: topRegion
        subRegion: subRegion
        probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
        countriesTop:
        - countriesTop
        - countriesTop
        name: name
        countryAlt: countryAlt
        probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
        id: id
        region: region
      properties:
        id:
          type: string
        name:
          type: string
        score:
          format: double
          type: number
        country:
          type: string
        countryAlt:
          type: string
        region:
          type: string
        topRegion:
          type: string
        subRegion:
          type: string
        countriesTop:
          description: List countries (top 10)
          items:
            description: List countries (top 10)
            type: string
          type: array
        probabilityCalibrated:
          format: double
          type: number
        probabilityAltCalibrated:
          format: double
          type: number
      type: object
      xml:
        name: PersonalNameGeoOut
    BatchFirstLastNameGeoIn:
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          id: id
          countryIso2: countryIso2
        - firstName: firstName
          lastName: lastName
          id: id
          countryIso2: countryIso2
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/FirstLastNameGeoIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGeoIn
    CurrenciesOut:
      example:
        currenciesIso3:
        - currenciesIso3
        - currenciesIso3
      properties:
        currenciesIso3:
          items:
            type: string
          type: array
      type: object
      xml:
        name: CurrenciesOut
    inline_object:
      properties:
        stripeToken:
          type: string
        stripeEmail:
          type: string
      type: object
  securitySchemes:
    api_key:
      description: api_key required
      in: header
      name: X-API-KEY
      type: apiKey
