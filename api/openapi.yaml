openapi: 3.0.1
info:
  contact:
    email: contact@namsor.com
    name: Namsor SAS
    url: http://www.namsor.com/
  description: 'NamSor API v2 : enpoints to process personal names (gender, cultural
    origin or ethnicity) in all alphabets or languages. By default, enpoints use 1
    unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per
    name depending on taxonomy. Use GET methods for small tests, but prefer POST methods
    for higher throughput (batch processing of up to 100 names at a time). Need something
    you can''t find here? We have many more features coming soon. Let us know, we''ll
    do our best to add it! '
  license:
    name: NamSorAPI_Lic_v0.0.7
    url: https://v2.namsor.com/NamSorAPIv2/assets/pdf/201803_NamSor_API_Terms_v007.pdf
  title: NamSor API v2
  version: 2.0.15
externalDocs:
  description: NamSor API client SDKs v2 for Java, Python
  url: https://github.com/namsor
servers:
- description: namsor_v2
  url: https://v2.namsor.com/NamSorAPIv2
security:
- api_key: []
tags:
- description: 'Personal names (anthroponyms) : gender, country origin/ethnicity,
    diaspora, US ''race''/ethniciy'
  name: personal
- description: Social media and pseudonyms
  name: social
- description: CHINESE special features
  name: chinese
- description: JAPANESE special features
  name: japanese
- description: Administrative, system management.
  name: admin
paths:
  /api2/json/country/{personalNameFull}:
    get:
      operationId: country
      parameters:
      - explode: false
        in: path
        name: personalNameFull
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameGeoOut'
          description: A origined name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 10 UNITS PER NAME] Infer the likely country of residence of
        a personal full name, or one surname. Assumes names as they are in the country
        of residence OR the country of origin.'
      tags:
      - personal
  /api2/json/nameType/{properNoun}:
    get:
      operationId: nameType
      parameters:
      - explode: false
        in: path
        name: properNoun
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProperNounCategorizedOut'
          description: A typed name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely type of a proper noun (personal name, brand name, place name etc.)
      tags:
      - general
  /api2/json/disable/{source}/{disabled}:
    get:
      operationId: disable
      parameters:
      - description: The API Key to set as enabled/disabled.
        explode: false
        in: path
        name: source
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: disabled
        required: true
        schema:
          type: boolean
        style: simple
      responses:
        200:
          description: Disabled the API Key.
        401:
          description: Missing or incorrect API Key
      summary: Activate/deactivate an API Key.
      tags:
      - admin
  /api2/json/origin/{firstName}/{lastName}:
    get:
      operationId: origin
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameOriginedOut'
          description: A origined name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal
        name. Assumes names as they are in the country of origin. For US, CA, AU,
        NZ and other melting-pots : use ''diaspora'' instead.'
      tags:
      - personal
  /api2/json/softwareVersion:
    get:
      operationId: softwareVersion
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareVersionOut'
          description: The current software version
        401:
          description: Missing or incorrect token
      summary: Get the current software version
      tags:
      - admin
  /api2/json/apiStatus:
    get:
      operationId: apiStatus
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIClassifiersStatusOut'
          description: Available classifiers and status
        401:
          description: Missing or incorrect token
      summary: Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices.
      tags:
      - admin
  /api2/json/apiServices:
    get:
      operationId: availableServices
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIServicesOut'
          description: Available services
        401:
          description: Missing or incorrect token
      summary: List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers.
      tags:
      - admin
  /api2/json/taxonomyClasses/{classifierName}:
    get:
      operationId: taxonomyClasses
      parameters:
      - explode: false
        in: path
        name: classifierName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIClassifierTaxonomyOut'
          description: Available plans
        401:
          description: Missing or incorrect token
      summary: Print the taxonomy classes valid for the given classifier.
      tags:
      - admin
  /api2/json/apiUsage:
    get:
      operationId: apiUsage
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPeriodUsageOut'
          description: Print current API usage.
        401:
          description: Missing or incorrect API Key
      security:
      - api_key: []
      summary: Print current API usage.
      tags:
      - admin
  /api2/json/apiUsageHistory:
    get:
      operationId: apiUsageHistory
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIUsageHistoryOut'
          description: Print historical API usage (NB. new output format form v2.0.15)
        401:
          description: Missing or incorrect API Key
      security:
      - api_key: []
      summary: Print historical API usage.
      tags:
      - admin
  /api2/json/apiUsageHistoryAggregate:
    get:
      operationId: apiUsageHistoryAggregate
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIUsageAggregatedOut'
          description: Print historical API usage.
        401:
          description: Missing or incorrect API Key
      security:
      - api_key: []
      summary: Print historical API usage (in an aggregated view, by service, by day/hour/min).
      tags:
      - admin
  /api2/json/learnable/{source}/{learnable}:
    get:
      operationId: learnable
      parameters:
      - description: The API Key to set as learnable/non learnable.
        explode: false
        in: path
        name: source
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: learnable
        required: true
        schema:
          type: boolean
        style: simple
      responses:
        200:
          description: Set learning from source.
        401:
          description: Missing or incorrect API Key
      summary: Activate/deactivate learning from a source.
      tags:
      - admin
  /api2/json/anonymize/{source}/{anonymized}:
    get:
      operationId: anonymize
      parameters:
      - explode: false
        in: path
        name: source
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: anonymized
        required: true
        schema:
          type: boolean
        style: simple
      responses:
        200:
          description: Anonymization of a source.
        401:
          description: Missing or incorrect API Key
      summary: Activate/deactivate anonymization for a source.
      tags:
      - admin
  /api2/json/nameTypeGeo/{properNoun}/{countryIso2}:
    get:
      operationId: nameTypeGeo
      parameters:
      - explode: false
        in: path
        name: properNoun
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProperNounCategorizedOut'
          description: A typed name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely type of a proper noun (personal name, brand name, place name etc.)
      tags:
      - general
  /api2/json/nameTypeBatch:
    post:
      operationId: nameTypeBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchNameIn'
        description: A list of proper names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchProperNounCategorizedOut'
          description: A list of commonTypeized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.)
      tags:
      - general
  /api2/json/nameTypeGeoBatch:
    post:
      operationId: nameTypeGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchNameGeoIn'
        description: A list of proper names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchProperNounCategorizedOut'
          description: A list of commonTypeized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.)
      tags:
      - general
  /api2/json/corridor/{countryIso2From}/{firstNameFrom}/{lastNameFrom}/{countryIso2To}/{firstNameTo}/{lastNameTo}:
    get:
      operationId: corridor
      parameters:
      - explode: false
        in: path
        name: countryIso2From
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: firstNameFrom
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastNameFrom
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2To
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: firstNameTo
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastNameTo
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorridorOut'
          description: Two classified names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 20 UNITS PER NAME COUPLE] Infer several classifications for
        a cross border interaction between names (ex. remit, travel, intl com)'
      tags:
      - personal
  /api2/json/corridorBatch:
    post:
      operationId: corridorBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCorridorIn'
        description: A list of name pairs, with country code (nameFrom -> nameTo).
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCorridorOut'
          description: A list of classified name pairs.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 20 UNITS PER NAME PAIR] Infer several classifications for up
        to 100 cross border interaction between names (ex. remit, travel, intl com)'
      tags:
      - personal
  /api2/json/gender/{firstName}/{lastName}:
    get:
      operationId: gender
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameGenderedOut'
          description: A genderized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of a name.
      tags:
      - personal
  /api2/json/genderGeo/{firstName}/{lastName}/{countryIso2}:
    get:
      operationId: genderGeo
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameGenderedOut'
          description: A genderized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of a name, given a local context (ISO2 country code).
      tags:
      - personal
  /api2/json/genderGeoBatch:
    post:
      operationId: genderGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGeoIn'
        description: A list of names, with country code.
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameGenderedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 names, each given a local context (ISO2 country code).
      tags:
      - personal
  /api2/json/genderBatch:
    post:
      operationId: genderBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameGenderedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 names, detecting automatically the cultural context.
      tags:
      - personal
  /api2/json/genderFullGeo/{fullName}/{countryIso2}:
    get:
      operationId: genderFullGeo
      parameters:
      - explode: false
        in: path
        name: fullName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameGenderedOut'
          description: A genderized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of a full name, given a local context (ISO2 country code).
      tags:
      - personal
  /api2/json/genderFull/{fullName}:
    get:
      operationId: genderFull
      parameters:
      - explode: false
        in: path
        name: fullName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameGenderedOut'
          description: A genderized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of a full name, ex. John H. Smith
      tags:
      - personal
  /api2/json/genderFullBatch:
    post:
      operationId: genderFullBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameGenderedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 full names, detecting automatically the cultural context.
      tags:
      - personal
  /api2/json/genderFullGeoBatch:
    post:
      operationId: genderFullGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameGeoIn'
        description: A list of personal names, with a country ISO2 code
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameGenderedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code).
      tags:
      - personal
  /api2/json/originBatch:
    post:
      operationId: originBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameOriginedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 10 UNITS PER NAME] Infer the likely country of origin of up
        to 100 names, detecting automatically the cultural context.'
      tags:
      - personal
  /api2/json/countryBatch:
    post:
      operationId: countryBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameGeoOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 10 UNITS PER NAME] Infer the likely country of residence of
        up to 100 personal full names, or surnames. Assumes names as they are in the
        country of residence OR the country of origin.'
      tags:
      - personal
  /api2/json/usRaceEthnicity/{firstName}/{lastName}:
    get:
      operationId: usRaceEthnicity
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameUSRaceEthnicityOut'
          description: 'a US resident''s likely race/ethnicity : W_NL (white, non
            latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non
            latino), AI_AN (American Indian or Alaskan Native*) and PI (Pacific Islander*).
            *optionally'
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 10 UNITS PER NAME] Infer a US resident''s likely race/ethnicity
        according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A
        (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY:
        USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian
        or Alaskan Native) and PI (Pacific Islander).'
      tags:
      - personal
  /api2/json/usRaceEthnicityZIP5/{firstName}/{lastName}/{zip5Code}:
    get:
      operationId: usRaceEthnicityZIP5
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: zip5Code
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameUSRaceEthnicityOut'
          description: 'a US resident''s likely race/ethnicity : W_NL (white, non
            latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non
            latino), AI_AN (American Indian or Alaskan Native*) and PI (Pacific Islander*).
            *optionally'
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 10 UNITS PER NAME] Infer a US resident''s likely race/ethnicity
        according to US Census taxonomy, using (optional) ZIP5 code info. Output is
        W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL
        (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY:
        USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian
        or Alaskan Native) and PI (Pacific Islander).'
      tags:
      - personal
  /api2/json/usRaceEthnicityBatch:
    post:
      operationId: usRaceEthnicityBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGeoIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameUSRaceEthnicityOut'
          description: A list of US resident's likely race/ethnicity. W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino), AI_AN (American Indian or Alaskan Native*) and PI (Pacific Islander*). *optionally
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 10 UNITS PER NAME] Infer up-to 100 US resident''s likely race/ethnicity
        according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano
        latino),  A (asian, non latino), B_NL (black, non latino). Optionally add
        header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two
        additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific
        Islander).'
      tags:
      - personal
  /api2/json/usZipRaceEthnicityBatch:
    post:
      operationId: usZipRaceEthnicityBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGeoZippedIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameUSRaceEthnicityOut'
          description: A list of US resident's likely race/ethnicity. W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino), AI_AN (American Indian or Alaskan Native*) and PI (Pacific Islander*). *optionally
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 10 UNITS PER NAME] Infer up-to 100 US resident''s likely race/ethnicity
        according to US Census taxonomy, with (optional) ZIP code. Output is W_NL
        (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black,
        non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES
        for two additional classes, AI_AN (American Indian or Alaskan Native) and
        PI (Pacific Islander).'
      tags:
      - personal
  /api2/json/diaspora/{countryIso2}/{firstName}/{lastName}:
    get:
      operationId: diaspora
      parameters:
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameDiasporaedOut'
          description: A diaspora / ethnicity for given name and geography.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a
        personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ
        etc.)'
      tags:
      - personal
  /api2/json/diasporaBatch:
    post:
      operationId: diasporaBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGeoIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameDiasporaedOut'
          description: A list of diaspora / ethnicity given a name and residency.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up
        to 100 personal names, given a country of residence ISO2 code (ex. US, CA,
        AU, NZ etc.)'
      tags:
      - personal
  /api2/json/parseName/{nameFull}/{countryIso2}:
    get:
      operationId: parseNameGeo
      parameters:
      - explode: false
        in: path
        name: nameFull
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameParsedOut'
          description: A origined name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context.
      tags:
      - personal
  /api2/json/parseNameBatch:
    post:
      operationId: parseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameParsedOut'
          description: A list of parsed names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.
      tags:
      - personal
  /api2/json/parseNameGeoBatch:
    post:
      operationId: parseNameGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameGeoIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameParsedOut'
          description: A list of parsed names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: 'Infer the likely first/last name structure of a name, ex. John Smith
        or SMITH, John or SMITH; John. Giving a local context improves precision. '
      tags:
      - personal
  /api2/json/parseChineseName/{chineseName}:
    get:
      operationId: parseChineseName
      parameters:
      - explode: false
        in: path
        name: chineseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameParsedOut'
          description: A origined name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name)
      tags:
      - chinese
  /api2/json/parseChineseNameBatch:
    post:
      operationId: parseChineseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameParsedOut'
          description: A list of parsed names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name).
      tags:
      - chinese
  /api2/json/pinyinChineseName/{chineseName}:
    get:
      operationId: pinyinChineseName
      parameters:
      - explode: false
        in: path
        name: chineseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameParsedOut'
          description: A pinyin name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name)
      tags:
      - chinese
  /api2/json/pinyinChineseNameBatch:
    post:
      operationId: pinyinChineseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of Chinese names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameParsedOut'
          description: A list of Pinyin names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name).
      tags:
      - chinese
  /api2/json/chineseNameMatch/{chineseSurnameLatin}/{chineseGivenNameLatin}/{chineseName}:
    get:
      operationId: chineseNameMatch
      parameters:
      - explode: false
        in: path
        name: chineseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: chineseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: chineseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameMatchedOut'
          description: A romanized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming
      tags:
      - chinese
  /api2/json/chineseNameMatchBatch:
    post:
      operationId: chineseNameMatchBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchMatchPersonalFirstLastNameIn'
        description: A list of personal Chinese names in LATIN, firstName = chineseGivenName; lastName=chineseSurname
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming
      tags:
      - chinese
  /api2/json/genderChineseNamePinyin/{chineseSurnameLatin}/{chineseGivenNameLatin}:
    get:
      operationId: genderChineseNamePinyin
      parameters:
      - explode: false
        in: path
        name: chineseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: chineseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameGenderedOut'
          description: A genderized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of a Chinese name in LATIN (Pinyin).
      tags:
      - chinese
  /api2/json/genderChineseNamePinyinBatch:
    post:
      operationId: genderChineseNamePinyinBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of names, with country code.
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameGenderedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin).
      tags:
      - chinese
  /api2/json/genderChineseName/{chineseName}:
    get:
      operationId: genderChineseName
      parameters:
      - explode: false
        in: path
        name: chineseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameGenderedOut'
          description: A genderized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of a Chinese full name ex. 王晓明
      tags:
      - chinese
  /api2/json/genderChineseNameBatch:
    post:
      operationId: genderChineseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names, with a country ISO2 code
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameGenderedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 full names ex. 王晓明
      tags:
      - chinese
  /api2/json/chineseNameCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}:
    get:
      operationId: chineseNameCandidates
      parameters:
      - explode: false
        in: path
        name: chineseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: chineseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameMatchCandidatesOut'
          description: A romanized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming
      tags:
      - chinese
  /api2/json/chineseNameCandidatesBatch:
    post:
      operationId: chineseNameCandidatesBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of personal Chinese names in LATIN, firstName = chineseGivenName; lastName=chineseSurname
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchCandidatesOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming
      tags:
      - chinese
  /api2/json/chineseNameGenderCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}/{knownGender}:
    get:
      operationId: chineseNameGenderCandidates
      parameters:
      - explode: false
        in: path
        name: chineseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: chineseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: knownGender
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameMatchCandidatesOut'
          description: A romanized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female')
      tags:
      - chinese
  /api2/json/chineseNameCandidatesGenderBatch:
    post:
      operationId: chineseNameCandidatesGenderBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGenderIn'
        description: A list of personal Chinese names in LATIN, firstName = chineseGivenName; lastName=chineseSurname
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchCandidatesOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming.
      tags:
      - chinese
  /api2/json/parseJapaneseName/{japaneseName}:
    get:
      operationId: parseJapaneseName
      parameters:
      - explode: false
        in: path
        name: japaneseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameParsedOut'
          description: A origined name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae
      tags:
      - japanese
  /api2/json/parseJapaneseNameBatch:
    post:
      operationId: parseJapaneseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameParsedOut'
          description: A list of parsed names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: 'Infer the likely first/last name structure of a name, ex. 山本 早苗 or
        Yamamoto Sanae '
      tags:
      - japanese
  /api2/json/japaneseNameKanjiCandidates/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{knownGender}:
    get:
      operationId: japaneseNameKanjiCandidates
      parameters:
      - explode: false
        in: path
        name: japaneseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: knownGender
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameMatchCandidatesOut'
          description: A romanized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender.
      tags:
      - japanese
  /api2/json/japaneseNameKanjiCandidates/{japaneseSurnameLatin}/{japaneseGivenNameLatin}:
    get:
      operationId: japaneseNameKanjiCandidates_1
      parameters:
      - explode: false
        in: path
        name: japaneseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameMatchCandidatesOut'
          description: A romanized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae
      tags:
      - japanese
  /api2/json/japaneseNameLatinCandidates/{japaneseSurnameKanji}/{japaneseGivenNameKanji}:
    get:
      operationId: japaneseNameLatinCandidates
      parameters:
      - explode: false
        in: path
        name: japaneseSurnameKanji
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseGivenNameKanji
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameMatchCandidatesOut'
          description: A romanized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Romanize japanese name, based on the name in Kanji.
      tags:
      - japanese
  /api2/json/japaneseNameKanjiCandidatesBatch:
    post:
      operationId: japaneseNameKanjiCandidatesBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of personal japanese names in LATIN, firstName = japaneseGivenName; lastName=japaneseSurname
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchCandidatesOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae
      tags:
      - japanese
  /api2/json/japaneseNameGenderKanjiCandidatesBatch:
    post:
      operationId: japaneseNameGenderKanjiCandidatesBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameGenderIn'
        description: A list of personal japanese names in LATIN, firstName = japaneseGivenName; lastName=japaneseSurname and known gender
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchCandidatesOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae
      tags:
      - japanese
  /api2/json/japaneseNameLatinCandidatesBatch:
    post:
      operationId: japaneseNameLatinCandidatesBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of personal japanese names in KANJI, firstName = japaneseGivenName; lastName=japaneseSurname
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchCandidatesOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Romanize japanese names, based on the name in KANJI
      tags:
      - japanese
  /api2/json/japaneseNameMatch/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{japaneseName}:
    get:
      operationId: japaneseNameMatch
      parameters:
      - explode: false
        in: path
        name: japaneseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameMatchedOut'
          description: A romanized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae
      tags:
      - japanese
  /api2/json/japaneseNameMatchFeedbackLoop/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{japaneseName}:
    get:
      operationId: japaneseNameMatchFeedbackLoop
      parameters:
      - explode: false
        in: path
        name: japaneseSurnameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseGivenNameLatin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackLoopOut'
          description: A romanized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese
        name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae'
      tags:
      - japanese
  /api2/json/japaneseNameMatchBatch:
    post:
      operationId: japaneseNameMatchBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchMatchPersonalFirstLastNameIn'
        description: A list of personal Japanese names in LATIN, firstName = japaneseGivenName; lastName=japaneseSurname
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNameMatchedOut'
          description: A list of matched names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae
      tags:
      - japanese
  /api2/json/genderJapaneseName/{japaneseSurname}/{japaneseGivenName}:
    get:
      operationId: genderJapaneseNamePinyin
      parameters:
      - explode: false
        in: path
        name: japaneseSurname
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: japaneseGivenName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNameGenderedOut'
          description: A genderized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of a Japanese name in LATIN (Pinyin).
      tags:
      - japanese
  /api2/json/genderJapaneseNameBatch:
    post:
      operationId: genderJapaneseNamePinyinBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNameIn'
        description: A list of names, with country code.
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNameGenderedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin).
      tags:
      - japanese
  /api2/json/genderJapaneseNameFull/{japaneseName}:
    get:
      operationId: genderJapaneseNameFull
      parameters:
      - explode: false
        in: path
        name: japaneseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameGenderedOut'
          description: A genderized name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of a Japanese full name ex. 王晓明
      tags:
      - japanese
  /api2/json/genderJapaneseNameFullBatch:
    post:
      operationId: genderJapaneseNameFullBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPersonalNameIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPersonalNameGenderedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: Infer the likely gender of up to 100 full names
      tags:
      - japanese
  /api2/json/phoneCode/{firstName}/{lastName}/{phoneNumber}:
    get:
      operationId: phoneCode
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: phoneNumber
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNamePhoneCodedOut'
          description: A name with country and phone code.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 11 UNITS PER NAME] Infer the likely country and phone prefix,
        given a personal name and formatted / unformatted phone number.'
      tags:
      - social
  /api2/json/phoneCodeGeo/{firstName}/{lastName}/{phoneNumber}/{countryIso2}:
    get:
      operationId: phoneCodeGeo
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: phoneNumber
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNamePhoneCodedOut'
          description: A name with country and phone code.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal
        name and formatted / unformatted phone number, with a local context (ISO2
        country of residence).'
      tags:
      - social
  /api2/json/phoneCodeGeoFeedbackLoop/{firstName}/{lastName}/{phoneNumber}/{phoneNumberE164}/{countryIso2}:
    get:
      operationId: phoneCodeGeoFeedbackLoop
      parameters:
      - explode: false
        in: path
        name: firstName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lastName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: phoneNumber
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: phoneNumberE164
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: countryIso2
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirstLastNamePhoneCodedOut'
          description: A name with country and phone code.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix,
        given a personal name and formatted / unformatted phone number, with a local
        context (ISO2 country of residence).'
      tags:
      - social
  /api2/json/phoneCodeBatch:
    post:
      operationId: phoneCodeBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNamePhoneNumberIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNamePhoneCodedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 11 UNITS PER NAME] Infer the likely country and phone prefix,
        of up to 100 personal names, detecting automatically the local context given
        a name and formatted / unformatted phone number.'
      tags:
      - social
  /api2/json/phoneCodeGeoBatch:
    post:
      operationId: phoneCodeGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFirstLastNamePhoneNumberGeoIn'
        description: A list of personal names
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFirstLastNamePhoneCodedOut'
          description: A list of genderized names.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: '[USES 11 UNITS PER NAME] Infer the likely country and phone prefix,
        of up to 100 personal names, with a local context (ISO2 country of residence).'
      tags:
      - social
  /api2/json/parseName/{nameFull}:
    get:
      operationId: parseName
      parameters:
      - explode: false
        in: path
        name: nameFull
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalNameParsedOut'
          description: A origined name.
        401:
          description: Missing or incorrect API Key
        403:
          description: API Limit Reached or API Key Disabled
      security:
      - api_key: []
      summary: 'Infer the likely first/last name structure of a name, ex. John Smith
        or SMITH, John or SMITH; John. '
      tags:
      - personal
components:
  schemas:
    BatchFirstLastNameGenderedOut:
      description: Represents the output of inferring the LIKELY gender from a list of personal names.
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          genderScale: 0.80082819046101150206595775671303272247314453125
          score: 60.2745618307040302852328750304877758026123046875
          probabilityCalibrated: 1.46581298050294517310021547018550336360931396484375
          likelyGender: male
          id: id
          script: script
        - firstName: firstName
          lastName: lastName
          genderScale: 0.80082819046101150206595775671303272247314453125
          score: 60.2745618307040302852328750304877758026123046875
          probabilityCalibrated: 1.46581298050294517310021547018550336360931396484375
          likelyGender: male
          id: id
          script: script
      properties:
        personalNames:
          description: Classified genderized names
          items:
            $ref: '#/components/schemas/FirstLastNameGenderedOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGenderedOut
    FirstLastNamePhoneNumberIn:
      example:
        firstName: firstName
        lastName: lastName
        phoneNumber: phoneNumber
        id: id
        FirstLastNameOriginedOut:
          lastName: lastName
          probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
          script: script
          regionOrigin: regionOrigin
          topRegionOrigin: topRegionOrigin
          firstName: firstName
          score: 8.0082819046101150206595775671303272247314453125
          subRegionOrigin: subRegionOrigin
          probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
          countriesOriginTop:
          - countriesOriginTop
          - countriesOriginTop
          id: id
          countryOrigin: countryOrigin
          countryOriginAlt: countryOriginAlt
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        phoneNumber:
          type: string
        FirstLastNameOriginedOut:
          $ref: '#/components/schemas/FirstLastNameOriginedOut'
      type: object
      xml:
        name: FirstLastNamePhoneNumberIn
    APICounterV2Out:
      description: Detailed usage as reported by the deduplicating API counter.
      example:
        apiKey:
          striped: true
          apiKey: apiKey
          partner: true
          corporate: true
          anonymized: true
          learnable: true
          admin: true
          disabled: true
          userId: userId
          vetted: true
        serviceFeaturesUsage:
          key: 5
        apiService: apiService
        createdDateTime: 0
        lastFlushedDateTime: 1
        totalUsage: 6
        lastUsedDateTime: 5
      properties:
        apiKey:
          $ref: '#/components/schemas/APIKeyOut'
        apiService:
          description: The apiService corresponds to the classifier name.
          type: string
        createdDateTime:
          description: The create datetime of the counter.
          format: int64
          type: integer
        totalUsage:
          description: The usage of the counter.
          format: int64
          type: integer
        lastFlushedDateTime:
          description: The flush datetime of the counter.
          format: int64
          type: integer
        lastUsedDateTime:
          description: The last usage datetime of the counter.
          format: int64
          type: integer
        serviceFeaturesUsage:
          additionalProperties:
            description: Usage of special features, such as Chinese, Japanese.
            format: int64
            type: integer
          description: Usage of special features, such as Chinese, Japanese.
          type: object
      type: object
      xml:
        name: APICallStatOut
    NameMatchCandidatesOut:
      description: Classified matched names
      example:
        firstName: firstName
        lastName: lastName
        orderOption: orderOption
        matchCandidates:
        - predScoreGivenName: 6.02745618307040320615897144307382404804229736328125
          candidateName: candidateName
          probability: 0.80082819046101150206595775671303272247314453125
          predScoreFamilyName: 1.46581298050294517310021547018550336360931396484375
        - predScoreGivenName: 6.02745618307040320615897144307382404804229736328125
          candidateName: candidateName
          probability: 0.80082819046101150206595775671303272247314453125
          predScoreFamilyName: 1.46581298050294517310021547018550336360931396484375
        id: id
        script: script
      properties:
        script:
          type: string
        id:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: The last name (also known as family name, or surname)
          type: string
        orderOption:
          description: The option for ordering
          type: string
        matchCandidates:
          description: The ordered list of name matching candidates
          items:
            $ref: '#/components/schemas/NameMatchCandidateOut'
          type: array
      type: object
      xml:
        name: NameMatchCandidatesOut
    SoftwareVersionOut:
      description: The software version.
      example:
        softwareNameAndVersion: softwareNameAndVersion
        softwareVersion:
        - 0
        - 0
      properties:
        softwareNameAndVersion:
          description: The software version
          type: string
        softwareVersion:
          description: The software version major minor build
          items:
            description: The software version major minor build
            format: int32
            type: integer
          type: array
      type: object
      xml:
        name: SoftwareVersionOut
    APIClassifierOut:
      description: The list of classifiers and versions.
      example:
        probabilityCalibrated: true
        shuttingDown: true
        learning: true
        classifierName: classifierName
        serving: true
      properties:
        classifierName:
          description: The classifier name
          type: string
        serving:
          description: True if the classifier is serving requests (has reached minimal learning, is not shutting down)
          type: boolean
        learning:
          description: True if the classifier is learning
          type: boolean
        shuttingDown:
          description: True if the classifier is shutting down
          type: boolean
        probabilityCalibrated:
          description: True if the classifier has finished the initial learning and calibrated probabilities (meanwhile, during initial learning, probabilities will be equal to -1)
          type: boolean
      type: object
      xml:
        name: APIClassifierOut
    NameIn:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: NameIn
    APIPlanSubscriptionOut:
      description: The API Plan governing the subscription.
      example:
        stripeStatus: stripeStatus
        planBaseFeesKey: planBaseFeesKey
        planQuota: 5
        apiKey: apiKey
        priceUSD: 2.3021358869347654518833223846741020679473876953125
        priceOverageUSD: 7.061401241503109105224211816675961017608642578125
        planStarted: 0
        planName: planName
        planStatus: planStatus
        priceOverage: 3.61607674925191080461672754609026014804840087890625
        userId: userId
        planEnded: 1
        taxRate: 5.962133916683182377482808078639209270477294921875
        price: 9.301444243932575517419536481611430644989013671875
        currency: currency
        currencyFactor: 2.027123023002321833274663731572218239307403564453125
        stripeSubscription: stripeSubscription
        stripeCustomerId: stripeCustomerId
        priorPlanStarted: 6
      properties:
        apiKey:
          description: User API Key.
          type: string
        planStarted:
          description: Datetime when the user subscribed to the current plan.
          format: int64
          type: integer
        priorPlanStarted:
          description: Datetime when the user subscribed to the prior plan.
          format: int64
          type: integer
        planEnded:
          description: Datetime when the user ended the plan.
          format: int64
          type: integer
        taxRate:
          description: Applicable tax rate for the plan.
          format: double
          type: number
        planName:
          description: Current plan name.
          type: string
        planBaseFeesKey:
          description: Current plan key (as in Stripe product).
          type: string
        planStatus:
          description: Plan status.
          type: string
        planQuota:
          description: 'Current plan quota in quantity of units (NB: some API use
            several units per name).'
          format: int64
          type: integer
        priceUSD:
          description: Current plan monthly price expressed in USD (includes a free quota).
          format: double
          type: number
        priceOverageUSD:
          description: Current plan price for overages expressed in USD (extra price per unit above the free quota).
          format: double
          type: number
        price:
          description: Current plan price for overages expressed in Currency (extra price per unit above the free quota).
          format: double
          type: number
        priceOverage:
          description: Current plan price for overages expressed in Currency (extra price per unit above the free quota).
          format: double
          type: number
        currency:
          description: Current plan Currency for prices.
          type: string
        currencyFactor:
          description: For USD, GBP, EUR - the factor is 1.
          format: double
          type: number
        stripeCustomerId:
          description: Stripe customer identifier.
          type: string
        stripeStatus:
          description: Stripe status ex active.
          type: string
        stripeSubscription:
          description: Stripe subscription identifier.
          type: string
        userId:
          description: Internal user identifier.
          type: string
      type: object
      xml:
        name: APIPlanSubscriptionOut
    FirstLastNameGenderIn:
      example:
        firstName: firstName
        lastName: lastName
        gender: gender
        id: id
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        gender:
          description: The known gender of the name
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: FirstLastName
    FirstLastNameGeoIn:
      example:
        firstName: firstName
        lastName: lastName
        id: id
        countryIso2: countryIso2
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        countryIso2:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: FirstLastNameGeoIn
    FirstLastNameGenderedOut:
      description: Represents the output of inferring the LIKELY gender from a personal name.
      example:
        firstName: firstName
        lastName: lastName
        genderScale: 0.80082819046101150206595775671303272247314453125
        score: 60.2745618307040302852328750304877758026123046875
        probabilityCalibrated: 1.46581298050294517310021547018550336360931396484375
        likelyGender: male
        id: id
        script: script
      properties:
        script:
          type: string
        id:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: The last name (also known as family name, or surname)
          type: string
        likelyGender:
          description: Most likely gender
          enum:
          - male
          - female
          - unknown
          type: string
        genderScale:
          description: Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value
          format: double
          type: number
        score:
          description: 'Compatibility to NamSor_v1 Gender score value. Higher score
            is better, but score is not normalized. Use calibratedProbability if available. '
          format: double
          maximum: 100
          minimum: 0
          type: number
        probabilityCalibrated:
          description: The calibrated probability for inferred gender to have been guessed correctly.
          format: double
          type: number
      type: object
      xml:
        name: FirstLastNameGenderedOut
    APIKeyOut:
      description: The API Key.
      example:
        striped: true
        apiKey: apiKey
        partner: true
        corporate: true
        anonymized: true
        learnable: true
        admin: true
        disabled: true
        userId: userId
        vetted: true
      properties:
        apiKey:
          description: The user API Key.
          type: string
          xml:
            name: api_key
        userId:
          description: The user identifier.
          type: string
        admin:
          description: The API Key has admin role.
          type: boolean
        vetted:
          description: The API Key is vetted (assumed truthful) for machine learning.
          type: boolean
        learnable:
          description: The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).
          type: boolean
        anonymized:
          description: The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).
          type: boolean
        partner:
          description: The API Key has partner role.
          type: boolean
        striped:
          description: The API Key is associated to a valid Stripe account.
          type: boolean
        corporate:
          description: The API Key has role corporate (ex SWIFT payments instead of Stripe payments).
          type: boolean
        disabled:
          description: The API Key is temporarily or permanently disabled.
          type: boolean
      type: object
      xml:
        name: APIKeyOut
    BatchFirstLastNameDiasporaedOut:
      description: Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          score: 59.62133916683182377482808078639209270477294921875
          ethnicity: Chinese
          lifted: true
          ethnicityAlt: Japanese
          id: id
          countryIso2: countryIso2
          ethnicitiesTop:
          - ethnicitiesTop
          - ethnicitiesTop
          script: script
        - firstName: firstName
          lastName: lastName
          score: 59.62133916683182377482808078639209270477294921875
          ethnicity: Chinese
          lifted: true
          ethnicityAlt: Japanese
          id: id
          countryIso2: countryIso2
          ethnicitiesTop:
          - ethnicitiesTop
          - ethnicitiesTop
          script: script
      properties:
        personalNames:
          description: Classified diaspora names
          items:
            $ref: '#/components/schemas/FirstLastNameDiasporaedOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameDiasporaedOut
    BatchPersonalNameGeoOut:
      example:
        personalNames:
        - score: 8.0082819046101150206595775671303272247314453125
          country: country
          topRegion: topRegion
          subRegion: subRegion
          probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
          countriesTop:
          - countriesTop
          - countriesTop
          name: name
          countryAlt: countryAlt
          probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
          id: id
          region: region
          script: script
        - score: 8.0082819046101150206595775671303272247314453125
          country: country
          topRegion: topRegion
          subRegion: subRegion
          probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
          countriesTop:
          - countriesTop
          - countriesTop
          name: name
          countryAlt: countryAlt
          probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
          id: id
          region: region
          script: script
      properties:
        personalNames:
          description: Classified geo names
          items:
            $ref: '#/components/schemas/PersonalNameGeoOut'
          type: array
      type: object
      xml:
        name: BatchPersonalNameGeoOut
    APIClassifiersStatusOut:
      example:
        classifiers:
        - probabilityCalibrated: true
          shuttingDown: true
          learning: true
          classifierName: classifierName
          serving: true
        - probabilityCalibrated: true
          shuttingDown: true
          learning: true
          classifierName: classifierName
          serving: true
        softwareVersion:
          softwareNameAndVersion: softwareNameAndVersion
          softwareVersion:
          - 0
          - 0
      properties:
        softwareVersion:
          $ref: '#/components/schemas/SoftwareVersionOut'
        classifiers:
          description: The list of classifiers and versions.
          items:
            $ref: '#/components/schemas/APIClassifierOut'
          type: array
      type: object
      xml:
        name: APIClassifiersStatusOut
    ProperNounCategorizedOut:
      description: Classified typed proper names
      example:
        score: 8.0082819046101150206595775671303272247314453125
        commonTypeAlt: commonTypeAlt
        name: name
        id: id
        script: script
        commonType: commonType
      properties:
        script:
          type: string
        id:
          type: string
        name:
          description: The input name
          type: string
        commonType:
          description: The most likely common name type
          type: string
        commonTypeAlt:
          description: 'Best alternative for : The most likely common name type'
          type: string
        score:
          description: 'Higher score is better, but score is not normalized. Use calibratedProbability
            if available. '
          format: double
          maximum: 100
          minimum: 0
          type: number
      type: object
      xml:
        name: ProperNounCategorizedOut
    PersonalNameGenderedOut:
      description: Classified genderized names
      example:
        genderScale: 0.80082819046101150206595775671303272247314453125
        score: 60.2745618307040302852328750304877758026123046875
        probabilityCalibrated: 1.46581298050294517310021547018550336360931396484375
        name: name
        likelyGender: male
        id: id
        script: script
      properties:
        script:
          type: string
        id:
          type: string
        name:
          description: The input name
          type: string
        likelyGender:
          description: Most likely gender
          enum:
          - male
          - female
          - unknown
          type: string
        genderScale:
          description: Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value
          format: double
          type: number
        score:
          description: 'Compatibility to NamSor_v1 Gender score value. Higher score
            is better, but score is not normalized. Use calibratedProbability if available. '
          format: double
          maximum: 100
          minimum: 0
          type: number
        probabilityCalibrated:
          description: The calibrated probability for inferred gender to have been guessed correctly.
          format: double
          type: number
      type: object
      xml:
        name: PersonalNameGenderedOut
    FirstLastNameOriginedOut:
      description: Represents the output of inferring the LIKELY country of Origin from a personal name.
      example:
        lastName: lastName
        probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
        script: script
        regionOrigin: regionOrigin
        topRegionOrigin: topRegionOrigin
        firstName: firstName
        score: 8.0082819046101150206595775671303272247314453125
        subRegionOrigin: subRegionOrigin
        probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
        countriesOriginTop:
        - countriesOriginTop
        - countriesOriginTop
        id: id
        countryOrigin: countryOrigin
        countryOriginAlt: countryOriginAlt
      properties:
        script:
          type: string
        id:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: The last name (also known as family name, or surname)
          type: string
        countryOrigin:
          description: Most likely country of Origin
          type: string
        countryOriginAlt:
          description: 'Second best alternative : country of Origin'
          type: string
        countriesOriginTop:
          description: List countries of Origin (top 10)
          items:
            description: List countries of Origin (top 10)
            type: string
          type: array
        score:
          description: 'Compatibility to NamSor_v1 Origin score value. Higher score
            is better, but score is not normalized. Use calibratedProbability if available. '
          format: double
          maximum: 100
          minimum: 0
          type: number
        regionOrigin:
          description: Most likely region of Origin (based on countryOrigin ISO2 code)
          type: string
        topRegionOrigin:
          description: Most likely top region of Origin (based on countryOrigin ISO2 code)
          type: string
        subRegionOrigin:
          description: Most likely sub region of Origin (based on countryOrigin ISO2 code)
          type: string
        probabilityCalibrated:
          description: The calibrated probability for countryOrigin to have been guessed correctly.
          format: double
          type: number
        probabilityAltCalibrated:
          description: The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly.
          format: double
          type: number
      type: object
      xml:
        name: FirstLastNameOriginedOut
    BatchNameGeoIn:
      example:
        properNouns:
        - name: name
          id: id
          countryIso2: countryIso2
        - name: name
          id: id
          countryIso2: countryIso2
      properties:
        properNouns:
          items:
            $ref: '#/components/schemas/NameGeoIn'
          type: array
      type: object
      xml:
        name: BatchNameGeoIn
    BatchFirstLastNameGenderIn:
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          gender: gender
          id: id
        - firstName: firstName
          lastName: lastName
          gender: gender
          id: id
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/FirstLastNameGenderIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGenderIn
    CorridorOut:
      description: Represent multiple classifications for corridor sender and receiver (gender, country, origin, diaspora)
      example:
        FirstLastNameDiasporaedOut:
          firstName: firstName
          lastName: lastName
          score: 59.62133916683182377482808078639209270477294921875
          ethnicity: Chinese
          lifted: true
          ethnicityAlt: Japanese
          id: id
          countryIso2: countryIso2
          ethnicitiesTop:
          - ethnicitiesTop
          - ethnicitiesTop
          script: script
        FirstLastNameGenderedOut:
          firstName: firstName
          lastName: lastName
          genderScale: 0.80082819046101150206595775671303272247314453125
          score: 60.2745618307040302852328750304877758026123046875
          probabilityCalibrated: 1.46581298050294517310021547018550336360931396484375
          likelyGender: male
          id: id
          script: script
        id: id
        script: script
        FirstLastNameOriginedOut:
          lastName: lastName
          probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
          script: script
          regionOrigin: regionOrigin
          topRegionOrigin: topRegionOrigin
          firstName: firstName
          score: 8.0082819046101150206595775671303272247314453125
          subRegionOrigin: subRegionOrigin
          probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
          countriesOriginTop:
          - countriesOriginTop
          - countriesOriginTop
          id: id
          countryOrigin: countryOrigin
          countryOriginAlt: countryOriginAlt
      properties:
        id:
          type: string
          xml:
            attribute: true
        FirstLastNameGenderedOut:
          $ref: '#/components/schemas/FirstLastNameGenderedOut'
        FirstLastNameOriginedOut:
          $ref: '#/components/schemas/FirstLastNameOriginedOut'
        FirstLastNameDiasporaedOut:
          $ref: '#/components/schemas/FirstLastNameDiasporaedOut'
        script:
          type: string
      type: object
      xml:
        name: CorridorOut
    BatchNameMatchedOut:
      example:
        matchedNames:
        - score: 0.80082819046101150206595775671303272247314453125
          matchStatus: matchStatus
          id: id
          script: script
        - score: 0.80082819046101150206595775671303272247314453125
          matchStatus: matchStatus
          id: id
          script: script
      properties:
        matchedNames:
          description: Classified matched names
          items:
            $ref: '#/components/schemas/NameMatchedOut'
          type: array
      type: object
      xml:
        name: BatchNameMatchedOut
    BatchNameMatchCandidatesOut:
      example:
        namesAndMatchCandidates:
        - firstName: firstName
          lastName: lastName
          orderOption: orderOption
          matchCandidates:
          - predScoreGivenName: 6.02745618307040320615897144307382404804229736328125
            candidateName: candidateName
            probability: 0.80082819046101150206595775671303272247314453125
            predScoreFamilyName: 1.46581298050294517310021547018550336360931396484375
          - predScoreGivenName: 6.02745618307040320615897144307382404804229736328125
            candidateName: candidateName
            probability: 0.80082819046101150206595775671303272247314453125
            predScoreFamilyName: 1.46581298050294517310021547018550336360931396484375
          id: id
          script: script
        - firstName: firstName
          lastName: lastName
          orderOption: orderOption
          matchCandidates:
          - predScoreGivenName: 6.02745618307040320615897144307382404804229736328125
            candidateName: candidateName
            probability: 0.80082819046101150206595775671303272247314453125
            predScoreFamilyName: 1.46581298050294517310021547018550336360931396484375
          - predScoreGivenName: 6.02745618307040320615897144307382404804229736328125
            candidateName: candidateName
            probability: 0.80082819046101150206595775671303272247314453125
            predScoreFamilyName: 1.46581298050294517310021547018550336360931396484375
          id: id
          script: script
      properties:
        namesAndMatchCandidates:
          description: Classified matched names
          items:
            $ref: '#/components/schemas/NameMatchCandidatesOut'
          type: array
      type: object
      xml:
        name: BatchNameMatchCandidatesOut
    BatchPersonalNameParsedOut:
      example:
        personalNames:
        - score: 8.0082819046101150206595775671303272247314453125
          firstLastName:
            firstName: firstName
            lastName: lastName
            id: id
            script: script
          name: name
          id: id
          script: script
          nameParserTypeAlt: nameParserTypeAlt
          nameParserType: nameParserType
        - score: 8.0082819046101150206595775671303272247314453125
          firstLastName:
            firstName: firstName
            lastName: lastName
            id: id
            script: script
          name: name
          id: id
          script: script
          nameParserTypeAlt: nameParserTypeAlt
          nameParserType: nameParserType
      properties:
        personalNames:
          description: Classified parsed names
          items:
            $ref: '#/components/schemas/PersonalNameParsedOut'
          type: array
      type: object
      xml:
        name: BatchPersonalNameParsedOut
    FirstLastNameDiasporaedOut:
      description: Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.
      example:
        firstName: firstName
        lastName: lastName
        score: 59.62133916683182377482808078639209270477294921875
        ethnicity: Chinese
        lifted: true
        ethnicityAlt: Japanese
        id: id
        countryIso2: countryIso2
        ethnicitiesTop:
        - ethnicitiesTop
        - ethnicitiesTop
        script: script
      properties:
        script:
          type: string
        id:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: The last name (also known as family name, or surname)
          type: string
        score:
          description: 'Compatibility to NamSor_v1 Diaspora score value. Higher score
            is better, but score is not normalized. Use calibratedProbability if available. '
          format: double
          maximum: 100
          minimum: 0
          type: number
        ethnicityAlt:
          description: The second best alternative ethnicity
          example: Japanese
          type: string
          xml:
            attribute: true
        ethnicity:
          description: The most likely ethnicity
          example: Chinese
          type: string
          xml:
            attribute: true
        lifted:
          description: Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true.
          type: boolean
          xml:
            attribute: true
        countryIso2:
          description: From input data, the countryIso2 of geographic context (US,CA etc.)
          type: string
          xml:
            attribute: true
        ethnicitiesTop:
          description: List most likely ethnicities (top 10)
          items:
            description: List most likely ethnicities (top 10)
            type: string
          type: array
      type: object
      xml:
        name: FirstLastNameDiasporaedOut
    BatchPersonalNameGenderedOut:
      example:
        personalNames:
        - genderScale: 0.80082819046101150206595775671303272247314453125
          score: 60.2745618307040302852328750304877758026123046875
          probabilityCalibrated: 1.46581298050294517310021547018550336360931396484375
          name: name
          likelyGender: male
          id: id
          script: script
        - genderScale: 0.80082819046101150206595775671303272247314453125
          score: 60.2745618307040302852328750304877758026123046875
          probabilityCalibrated: 1.46581298050294517310021547018550336360931396484375
          name: name
          likelyGender: male
          id: id
          script: script
      properties:
        personalNames:
          description: Classified genderized names
          items:
            $ref: '#/components/schemas/PersonalNameGenderedOut'
          type: array
      type: object
      xml:
        name: BatchPersonalNameGenderedOut
    FeedbackLoopOut:
      example:
        feedbackCredits: 0
      properties:
        feedbackCredits:
          description: Number of units recredited as per feedback loop successful classification
          format: int64
          type: integer
      type: object
      xml:
        name: FeedbackLoopOut
    APIBillingPeriodUsageOut:
      description: The current billing period.
      example:
        apiKey: apiKey
        periodStarted: 7
        stripeCurrentPeriodEnd: 1
        usage: 6
        hardLimit: 1
        subscriptionStarted: 4
        periodEnded: 1
        billingStatus: billingStatus
        stripeCurrentPeriodStart: 1
        softLimit: 7
      properties:
        apiKey:
          description: User API Key.
          type: string
        subscriptionStarted:
          description: Datetime when the user subscribed to the plan.
          format: int64
          type: integer
        periodStarted:
          description: Datetime when the the plan's current period started.
          format: int64
          type: integer
        periodEnded:
          description: Datetime when the the plan's current period endend.
          format: int64
          type: integer
        stripeCurrentPeriodEnd:
          description: Datetime when the the plan's current period endend (in Stripe). Internal and Stripe periodicity should ~coincide.
          format: int64
          type: integer
        stripeCurrentPeriodStart:
          description: Datetime when the the plan's current period started (in Stripe). Internal and Stripe periodicity should ~coincide.
          format: int64
          type: integer
        billingStatus:
          description: Current period billing status ex OPEN.
          type: string
        usage:
          description: Current period usage in units (NB some API endpoints use more than one unit).
          format: int64
          type: integer
        softLimit:
          description: Current period soft limit (reaching the limit sends an email notification).
          format: int64
          type: integer
        hardLimit:
          description: Current period hard limit (reaching the limit sends an email notification and blocks the API Key).
          format: int64
          type: integer
      type: object
      xml:
        name: APIBillingPeriodUsageOut
    APIPeriodUsageOut:
      example:
        overageInclTax: 5.02500479152029466689555192715488374233245849609375
        overageQuantity: 9
        billingPeriod:
          apiKey: apiKey
          periodStarted: 7
          stripeCurrentPeriodEnd: 1
          usage: 6
          hardLimit: 1
          subscriptionStarted: 4
          periodEnded: 1
          billingStatus: billingStatus
          stripeCurrentPeriodStart: 1
          softLimit: 7
        overageCurrency: overageCurrency
        subscription:
          stripeStatus: stripeStatus
          planBaseFeesKey: planBaseFeesKey
          planQuota: 5
          apiKey: apiKey
          priceUSD: 2.3021358869347654518833223846741020679473876953125
          priceOverageUSD: 7.061401241503109105224211816675961017608642578125
          planStarted: 0
          planName: planName
          planStatus: planStatus
          priceOverage: 3.61607674925191080461672754609026014804840087890625
          userId: userId
          planEnded: 1
          taxRate: 5.962133916683182377482808078639209270477294921875
          price: 9.301444243932575517419536481611430644989013671875
          currency: currency
          currencyFactor: 2.027123023002321833274663731572218239307403564453125
          stripeSubscription: stripeSubscription
          stripeCustomerId: stripeCustomerId
          priorPlanStarted: 6
        overageExclTax: 4.9652184929849543237878606305457651615142822265625
      properties:
        subscription:
          $ref: '#/components/schemas/APIPlanSubscriptionOut'
        billingPeriod:
          $ref: '#/components/schemas/APIBillingPeriodUsageOut'
        overageExclTax:
          description: Overage amount including any tax.
          format: double
          type: number
        overageInclTax:
          description: Overage amount including tax (if applicable).
          format: double
          type: number
        overageCurrency:
          description: Currency of the overage amount.
          type: string
        overageQuantity:
          description: Quantity above monthly quota of the current subscritpion, in units.
          format: int64
          type: integer
      type: object
      xml:
        name: APICurrentUsageOut
    PersonalNameIn:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: PersonalNameIn
    BatchCorridorIn:
      example:
        corridorFromTo:
        - firstLastNameGeoTo:
            firstName: firstName
            lastName: lastName
            id: id
            countryIso2: countryIso2
          id: id
          firstLastNameGeoFrom:
            firstName: firstName
            lastName: lastName
            id: id
            countryIso2: countryIso2
        - firstLastNameGeoTo:
            firstName: firstName
            lastName: lastName
            id: id
            countryIso2: countryIso2
          id: id
          firstLastNameGeoFrom:
            firstName: firstName
            lastName: lastName
            id: id
            countryIso2: countryIso2
      properties:
        corridorFromTo:
          items:
            $ref: '#/components/schemas/CorridorIn'
          type: array
      type: object
      xml:
        name: BatchCorridorIn
    APIUsageAggregatedOut:
      example:
        rowHeaders:
        - rowHeaders
        - rowHeaders
        data:
        - - 5
          - 5
        - - 5
          - 5
        historyTruncated: true
        colHeaders:
        - colHeaders
        - colHeaders
        totalUsage: 1
        periodStart: 0
        timeUnit: timeUnit
        periodEnd: 6
      properties:
        timeUnit:
          description: Time unit is DAY, WEEK or MONTH depending on prior usage
          type: string
        periodStart:
          description: Start datetime of the reporting period
          format: int64
          type: integer
        periodEnd:
          description: End datetime of the reporting period
          format: int64
          type: integer
        totalUsage:
          description: Total usage in the current period
          format: int64
          type: integer
        historyTruncated:
          description: If the history was truncaded due to data limit
          type: boolean
        data:
          description: 'Data points : usage per DAY, WEEK or MONTH and per apiService'
          items:
            description: 'Data points : usage per DAY, WEEK or MONTH and per apiService'
            items:
              description: 'Data points : usage per DAY, WEEK or MONTH and per apiService'
              format: int32
              type: integer
            type: array
          type: array
        colHeaders:
          description: 'apiServices as column headers '
          items:
            description: 'apiServices as column headers '
            type: string
          type: array
        rowHeaders:
          description: 'dates as row headers '
          items:
            description: 'dates as row headers '
            type: string
          type: array
      type: object
      xml:
        name: APIUsageAggregatedOut
    APIServicesOut:
      example:
        apiServices:
        - costInUnits: 0
          serviceGroup: serviceGroup
          serviceName: serviceName
        - costInUnits: 0
          serviceGroup: serviceGroup
          serviceName: serviceName
      properties:
        apiServices:
          description: List of API Services
          items:
            $ref: '#/components/schemas/APIServiceOut'
          type: array
      type: object
      xml:
        name: APIServicesOut
    BatchNameIn:
      example:
        properNouns:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        properNouns:
          items:
            $ref: '#/components/schemas/NameIn'
          type: array
      type: object
      xml:
        name: BatchNameIn
    FirstLastNameOut:
      description: First / last name structure corresponding to the most likely parsing.
      example:
        firstName: firstName
        lastName: lastName
        id: id
        script: script
      properties:
        script:
          type: string
        id:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: The last name (also known as family name, or surname)
          type: string
      type: object
      xml:
        name: FirstLastNameOut
    BatchFirstLastNameUSRaceEthnicityOut:
      description: Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          raceEthnicityAlt: W_NL
          score: 8.0082819046101150206595775671303272247314453125
          raceEthnicitiesTop:
          - raceEthnicitiesTop
          - raceEthnicitiesTop
          probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
          probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
          id: id
          script: script
          raceEthnicity: W_NL
        - firstName: firstName
          lastName: lastName
          raceEthnicityAlt: W_NL
          score: 8.0082819046101150206595775671303272247314453125
          raceEthnicitiesTop:
          - raceEthnicitiesTop
          - raceEthnicitiesTop
          probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
          probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
          id: id
          script: script
          raceEthnicity: W_NL
      properties:
        personalNames:
          description: Classified US 'race'/ethnicized names
          items:
            $ref: '#/components/schemas/FirstLastNameUSRaceEthnicityOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameUSRaceEthnicityOut
    BatchPersonalNameIn:
      example:
        personalNames:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/PersonalNameIn'
          type: array
      type: object
      xml:
        name: BatchPersonalNameIn
    BatchFirstLastNamePhoneNumberIn:
      example:
        personalNamesWithPhoneNumbers:
        - firstName: firstName
          lastName: lastName
          phoneNumber: phoneNumber
          id: id
          FirstLastNameOriginedOut:
            lastName: lastName
            probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
            script: script
            regionOrigin: regionOrigin
            topRegionOrigin: topRegionOrigin
            firstName: firstName
            score: 8.0082819046101150206595775671303272247314453125
            subRegionOrigin: subRegionOrigin
            probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
            countriesOriginTop:
            - countriesOriginTop
            - countriesOriginTop
            id: id
            countryOrigin: countryOrigin
            countryOriginAlt: countryOriginAlt
        - firstName: firstName
          lastName: lastName
          phoneNumber: phoneNumber
          id: id
          FirstLastNameOriginedOut:
            lastName: lastName
            probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
            script: script
            regionOrigin: regionOrigin
            topRegionOrigin: topRegionOrigin
            firstName: firstName
            score: 8.0082819046101150206595775671303272247314453125
            subRegionOrigin: subRegionOrigin
            probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
            countriesOriginTop:
            - countriesOriginTop
            - countriesOriginTop
            id: id
            countryOrigin: countryOrigin
            countryOriginAlt: countryOriginAlt
      properties:
        personalNamesWithPhoneNumbers:
          items:
            $ref: '#/components/schemas/FirstLastNamePhoneNumberIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNamePhoneNumberIn
    NameGeoIn:
      example:
        name: name
        id: id
        countryIso2: countryIso2
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
        countryIso2:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: NameGeoIn
    FirstLastNamePhoneCodedOut:
      description: Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.
      example:
        lastName: lastName
        originCountryIso2Alt: originCountryIso2Alt
        phoneCountryIso2Verified: phoneCountryIso2Verified
        verified: true
        script: script
        firstName: firstName
        score: 14.6581298050294517310021547018550336360931396484375
        phoneNumber: phoneNumber
        phoneCountryCode: 0
        phoneCountryIso2: phoneCountryIso2
        originCountryIso2: originCountryIso2
        phoneCountryIso2Alt: phoneCountryIso2Alt
        id: id
        internationalPhoneNumberVerified: internationalPhoneNumberVerified
        phoneCountryCodeAlt: 6
        countryIso2: countryIso2
      properties:
        script:
          type: string
        id:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: The last name (also known as family name, or surname)
          type: string
        internationalPhoneNumberVerified:
          description: The normalized phone number, verified using libphonenumber.
          type: string
        phoneCountryIso2Verified:
          description: The phone ISO2 country code, verified using libphonenumber.
          type: string
        phoneCountryCode:
          description: The phone country code of the phone number, verified using libphonenumber.
          format: int32
          type: integer
        phoneCountryCodeAlt:
          description: The best alternative phone country code of the phone number.
          format: int32
          type: integer
        phoneCountryIso2:
          description: The likely country of the phone number.
          type: string
        phoneCountryIso2Alt:
          description: The best alternative country of the phone number.
          type: string
        originCountryIso2:
          description: The likely country of origin of the name.
          type: string
        originCountryIso2Alt:
          description: The best alternative country of origin of the name.
          type: string
        phoneNumber:
          description: The input phone number.
          type: string
        verified:
          description: Indicates if the phone number could be positively verified using libphonenumber.
          type: boolean
        score:
          description: 'Higher score is better, but score is not normalized. Use calibratedProbability
            if available. '
          format: double
          maximum: 100
          minimum: 0
          type: number
        countryIso2:
          type: string
      type: object
      xml:
        name: FirstLastNamePhoneCodedOut
    MatchPersonalFirstLastNameIn:
      example:
        id: id
        name2:
          name: name
          id: id
        name1:
          firstName: firstName
          lastName: lastName
          id: id
      properties:
        id:
          type: string
          xml:
            attribute: true
        name1:
          $ref: '#/components/schemas/FirstLastNameIn'
        name2:
          $ref: '#/components/schemas/PersonalNameIn'
      type: object
      xml:
        name: MatchPersonalFirstLastNameIn
    PersonalNameParsedOut:
      example:
        score: 8.0082819046101150206595775671303272247314453125
        firstLastName:
          firstName: firstName
          lastName: lastName
          id: id
          script: script
        name: name
        id: id
        script: script
        nameParserTypeAlt: nameParserTypeAlt
        nameParserType: nameParserType
      properties:
        script:
          type: string
        id:
          type: string
        name:
          description: The input name
          type: string
        nameParserType:
          description: Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.
          type: string
        nameParserTypeAlt:
          description: Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.
          type: string
        firstLastName:
          $ref: '#/components/schemas/FirstLastNameOut'
        score:
          description: 'Higher score is better, but score is not normalized. Use calibratedProbability
            if available. '
          format: double
          maximum: 100
          minimum: 0
          type: number
      type: object
      xml:
        name: PersonalNameParsedOut
    BatchFirstLastNameGeoZippedIn:
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          zipCode: zipCode
          id: id
          countryIso2: countryIso2
        - firstName: firstName
          lastName: lastName
          zipCode: zipCode
          id: id
          countryIso2: countryIso2
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/FirstLastNameGeoZippedIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGeoZippedIn
    BatchFirstLastNameOriginedOut:
      description: Represents the output of inferring the LIKELY origin from a list of personal names.
      example:
        personalNames:
        - lastName: lastName
          probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
          script: script
          regionOrigin: regionOrigin
          topRegionOrigin: topRegionOrigin
          firstName: firstName
          score: 8.0082819046101150206595775671303272247314453125
          subRegionOrigin: subRegionOrigin
          probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
          countriesOriginTop:
          - countriesOriginTop
          - countriesOriginTop
          id: id
          countryOrigin: countryOrigin
          countryOriginAlt: countryOriginAlt
        - lastName: lastName
          probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
          script: script
          regionOrigin: regionOrigin
          topRegionOrigin: topRegionOrigin
          firstName: firstName
          score: 8.0082819046101150206595775671303272247314453125
          subRegionOrigin: subRegionOrigin
          probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
          countriesOriginTop:
          - countriesOriginTop
          - countriesOriginTop
          id: id
          countryOrigin: countryOrigin
          countryOriginAlt: countryOriginAlt
      properties:
        personalNames:
          description: Classified origined names
          items:
            $ref: '#/components/schemas/FirstLastNameOriginedOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameOriginedOut
    FirstLastNameGeoZippedIn:
      example:
        firstName: firstName
        lastName: lastName
        zipCode: zipCode
        id: id
        countryIso2: countryIso2
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        countryIso2:
          type: string
          xml:
            attribute: true
        zipCode:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: FirstLastNameGeoZippedIn
    CorridorIn:
      description: Represent any transnational interaction between names (ex. remittance, communication, cross-border investment, airline travel
      example:
        firstLastNameGeoTo:
          firstName: firstName
          lastName: lastName
          id: id
          countryIso2: countryIso2
        id: id
        firstLastNameGeoFrom:
          firstName: firstName
          lastName: lastName
          id: id
          countryIso2: countryIso2
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstLastNameGeoFrom:
          $ref: '#/components/schemas/FirstLastNameGeoIn'
        firstLastNameGeoTo:
          $ref: '#/components/schemas/FirstLastNameGeoIn'
      type: object
      xml:
        name: CorridorIn
    BatchCorridorOut:
      example:
        corridorFromTo:
        - FirstLastNameDiasporaedOut:
            firstName: firstName
            lastName: lastName
            score: 59.62133916683182377482808078639209270477294921875
            ethnicity: Chinese
            lifted: true
            ethnicityAlt: Japanese
            id: id
            countryIso2: countryIso2
            ethnicitiesTop:
            - ethnicitiesTop
            - ethnicitiesTop
            script: script
          FirstLastNameGenderedOut:
            firstName: firstName
            lastName: lastName
            genderScale: 0.80082819046101150206595775671303272247314453125
            score: 60.2745618307040302852328750304877758026123046875
            probabilityCalibrated: 1.46581298050294517310021547018550336360931396484375
            likelyGender: male
            id: id
            script: script
          id: id
          script: script
          FirstLastNameOriginedOut:
            lastName: lastName
            probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
            script: script
            regionOrigin: regionOrigin
            topRegionOrigin: topRegionOrigin
            firstName: firstName
            score: 8.0082819046101150206595775671303272247314453125
            subRegionOrigin: subRegionOrigin
            probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
            countriesOriginTop:
            - countriesOriginTop
            - countriesOriginTop
            id: id
            countryOrigin: countryOrigin
            countryOriginAlt: countryOriginAlt
        - FirstLastNameDiasporaedOut:
            firstName: firstName
            lastName: lastName
            score: 59.62133916683182377482808078639209270477294921875
            ethnicity: Chinese
            lifted: true
            ethnicityAlt: Japanese
            id: id
            countryIso2: countryIso2
            ethnicitiesTop:
            - ethnicitiesTop
            - ethnicitiesTop
            script: script
          FirstLastNameGenderedOut:
            firstName: firstName
            lastName: lastName
            genderScale: 0.80082819046101150206595775671303272247314453125
            score: 60.2745618307040302852328750304877758026123046875
            probabilityCalibrated: 1.46581298050294517310021547018550336360931396484375
            likelyGender: male
            id: id
            script: script
          id: id
          script: script
          FirstLastNameOriginedOut:
            lastName: lastName
            probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
            script: script
            regionOrigin: regionOrigin
            topRegionOrigin: topRegionOrigin
            firstName: firstName
            score: 8.0082819046101150206595775671303272247314453125
            subRegionOrigin: subRegionOrigin
            probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
            countriesOriginTop:
            - countriesOriginTop
            - countriesOriginTop
            id: id
            countryOrigin: countryOrigin
            countryOriginAlt: countryOriginAlt
      properties:
        corridorFromTo:
          description: Classified corridors
          items:
            $ref: '#/components/schemas/CorridorOut'
          type: array
      type: object
      xml:
        name: BatchCorridorOut
    BatchPersonalNameGeoIn:
      example:
        personalNames:
        - name: name
          id: id
          countryIso2: countryIso2
        - name: name
          id: id
          countryIso2: countryIso2
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/PersonalNameGeoIn'
          type: array
      type: object
      xml:
        name: BatchPersonalNameGeoIn
    FirstLastNameIn:
      example:
        firstName: firstName
        lastName: lastName
        id: id
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: FirstLastName
    APIClassifierTaxonomyOut:
      example:
        taxonomyClasses:
        - taxonomyClasses
        - taxonomyClasses
        classifierName: classifierName
      properties:
        classifierName:
          description: Name of the classifier as per apiStatus (corresponds also to the name of the service in apiServices)
          type: string
        taxonomyClasses:
          description: The taxonomy classes this classifier classifies to
          items:
            description: The taxonomy classes this classifier classifies to
            type: string
          type: array
      type: object
      xml:
        name: APIClassifierTaxonomyOut
    NameMatchCandidateOut:
      description: The ordered list of name matching candidates
      example:
        predScoreGivenName: 6.02745618307040320615897144307382404804229736328125
        candidateName: candidateName
        probability: 0.80082819046101150206595775671303272247314453125
        predScoreFamilyName: 1.46581298050294517310021547018550336360931396484375
      properties:
        candidateName:
          description: The name matching candidate name
          type: string
        probability:
          description: The name matching estimated probability.
          format: double
          type: number
        predScoreGivenName:
          description: The given name prediction score.
          format: double
          type: number
        predScoreFamilyName:
          description: The family name prediction score.
          format: double
          type: number
      type: object
      xml:
        name: NameMatchCandidateOut
    APIUsageHistoryOut:
      example:
        detailedUsage:
        - apiKey:
            striped: true
            apiKey: apiKey
            partner: true
            corporate: true
            anonymized: true
            learnable: true
            admin: true
            disabled: true
            userId: userId
            vetted: true
          serviceFeaturesUsage:
            key: 5
          apiService: apiService
          createdDateTime: 0
          lastFlushedDateTime: 1
          totalUsage: 6
          lastUsedDateTime: 5
        - apiKey:
            striped: true
            apiKey: apiKey
            partner: true
            corporate: true
            anonymized: true
            learnable: true
            admin: true
            disabled: true
            userId: userId
            vetted: true
          serviceFeaturesUsage:
            key: 5
          apiService: apiService
          createdDateTime: 0
          lastFlushedDateTime: 1
          totalUsage: 6
          lastUsedDateTime: 5
      properties:
        detailedUsage:
          description: Detailed usage as reported by the deduplicating API counter.
          items:
            $ref: '#/components/schemas/APICounterV2Out'
          type: array
      type: object
      xml:
        name: APIUsageHistoryOut
    BatchFirstLastNamePhoneCodedOut:
      description: Represents the output of inferring the LIKELY country and phone code of personal names+phones.
      example:
        personalNamesWithPhoneNumbers:
        - lastName: lastName
          originCountryIso2Alt: originCountryIso2Alt
          phoneCountryIso2Verified: phoneCountryIso2Verified
          verified: true
          script: script
          firstName: firstName
          score: 14.6581298050294517310021547018550336360931396484375
          phoneNumber: phoneNumber
          phoneCountryCode: 0
          phoneCountryIso2: phoneCountryIso2
          originCountryIso2: originCountryIso2
          phoneCountryIso2Alt: phoneCountryIso2Alt
          id: id
          internationalPhoneNumberVerified: internationalPhoneNumberVerified
          phoneCountryCodeAlt: 6
          countryIso2: countryIso2
        - lastName: lastName
          originCountryIso2Alt: originCountryIso2Alt
          phoneCountryIso2Verified: phoneCountryIso2Verified
          verified: true
          script: script
          firstName: firstName
          score: 14.6581298050294517310021547018550336360931396484375
          phoneNumber: phoneNumber
          phoneCountryCode: 0
          phoneCountryIso2: phoneCountryIso2
          originCountryIso2: originCountryIso2
          phoneCountryIso2Alt: phoneCountryIso2Alt
          id: id
          internationalPhoneNumberVerified: internationalPhoneNumberVerified
          phoneCountryCodeAlt: 6
          countryIso2: countryIso2
      properties:
        personalNamesWithPhoneNumbers:
          description: Classified phone-coded names
          items:
            $ref: '#/components/schemas/FirstLastNamePhoneCodedOut'
          type: array
      type: object
      xml:
        name: BatchFirstLastNamePhoneCodedOut
    FirstLastNameUSRaceEthnicityOut:
      description: Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.
      example:
        firstName: firstName
        lastName: lastName
        raceEthnicityAlt: W_NL
        score: 8.0082819046101150206595775671303272247314453125
        raceEthnicitiesTop:
        - raceEthnicitiesTop
        - raceEthnicitiesTop
        probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
        probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
        id: id
        script: script
        raceEthnicity: W_NL
      properties:
        script:
          type: string
        id:
          type: string
        firstName:
          description: The first name (also known as given name)
          type: string
        lastName:
          description: The last name (also known as family name, or surname)
          type: string
        raceEthnicityAlt:
          description: Second most likely US 'race'/ethnicity
          enum:
          - W_NL
          - HL
          - A
          - B_NL
          - AI_AN
          - PI
          type: string
          xml:
            attribute: true
        raceEthnicity:
          description: Most likely US 'race'/ethnicity
          enum:
          - W_NL
          - HL
          - A
          - B_NL
          - AI_AN
          - PI
          type: string
          xml:
            attribute: true
        score:
          description: 'Higher score is better, but score is not normalized. Use calibratedProbability
            if available. '
          format: double
          maximum: 100
          minimum: 0
          type: number
        raceEthnicitiesTop:
          description: List 'race'/ethnicities
          items:
            description: List 'race'/ethnicities
            type: string
          type: array
        probabilityCalibrated:
          description: The calibrated probability for raceEthnicity to have been guessed correctly.
          format: double
          type: number
        probabilityAltCalibrated:
          description: The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly.
          format: double
          type: number
      type: object
      xml:
        name: FirstLastNameUSRaceEthnicityOut
    BatchFirstLastNamePhoneNumberGeoIn:
      example:
        personalNamesWithPhoneNumbers:
        - firstName: firstName
          lastName: lastName
          phoneNumber: phoneNumber
          countryIso2Alt: countryIso2Alt
          id: id
          countryIso2: countryIso2
          FirstLastNameOriginedOut:
            lastName: lastName
            probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
            script: script
            regionOrigin: regionOrigin
            topRegionOrigin: topRegionOrigin
            firstName: firstName
            score: 8.0082819046101150206595775671303272247314453125
            subRegionOrigin: subRegionOrigin
            probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
            countriesOriginTop:
            - countriesOriginTop
            - countriesOriginTop
            id: id
            countryOrigin: countryOrigin
            countryOriginAlt: countryOriginAlt
        - firstName: firstName
          lastName: lastName
          phoneNumber: phoneNumber
          countryIso2Alt: countryIso2Alt
          id: id
          countryIso2: countryIso2
          FirstLastNameOriginedOut:
            lastName: lastName
            probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
            script: script
            regionOrigin: regionOrigin
            topRegionOrigin: topRegionOrigin
            firstName: firstName
            score: 8.0082819046101150206595775671303272247314453125
            subRegionOrigin: subRegionOrigin
            probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
            countriesOriginTop:
            - countriesOriginTop
            - countriesOriginTop
            id: id
            countryOrigin: countryOrigin
            countryOriginAlt: countryOriginAlt
      properties:
        personalNamesWithPhoneNumbers:
          items:
            $ref: '#/components/schemas/FirstLastNamePhoneNumberGeoIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNamePhoneNumberGeoIn
    PersonalNameGeoIn:
      example:
        name: name
        id: id
        countryIso2: countryIso2
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
        countryIso2:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: PersonalNameGeoIn
    APIServiceOut:
      description: List of API Services
      example:
        costInUnits: 0
        serviceGroup: serviceGroup
        serviceName: serviceName
      properties:
        serviceName:
          description: A service name corresponds to classifier name in apiStatus (ex. personalname_gender or personalfullname_gender)
          type: string
        serviceGroup:
          description: Groups together classifiers providing a similar service (ex. gender groups personalname_gender and personalfullname_gender)
          type: string
        costInUnits:
          description: Indicates how many units per call this service costs (ex. the number of units per name)
          format: int32
          type: integer
      type: object
      xml:
        name: APIServiceOut
    BatchProperNounCategorizedOut:
      description: Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names.
      example:
        properNouns:
        - score: 8.0082819046101150206595775671303272247314453125
          commonTypeAlt: commonTypeAlt
          name: name
          id: id
          script: script
          commonType: commonType
        - score: 8.0082819046101150206595775671303272247314453125
          commonTypeAlt: commonTypeAlt
          name: name
          id: id
          script: script
          commonType: commonType
      properties:
        properNouns:
          description: Classified typed proper names
          items:
            $ref: '#/components/schemas/ProperNounCategorizedOut'
          type: array
      type: object
      xml:
        name: BatchProperNounCategorizedOut
    BatchFirstLastNameIn:
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          id: id
        - firstName: firstName
          lastName: lastName
          id: id
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/FirstLastNameIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameIn
    NameMatchedOut:
      description: Classified matched names
      example:
        score: 0.80082819046101150206595775671303272247314453125
        matchStatus: matchStatus
        id: id
        script: script
      properties:
        script:
          type: string
        id:
          type: string
        matchStatus:
          description: The name matching status.
          type: string
        score:
          format: double
          type: number
      type: object
      xml:
        name: NameMatchedOut
    BatchMatchPersonalFirstLastNameIn:
      example:
        personalNames:
        - id: id
          name2:
            name: name
            id: id
          name1:
            firstName: firstName
            lastName: lastName
            id: id
        - id: id
          name2:
            name: name
            id: id
          name1:
            firstName: firstName
            lastName: lastName
            id: id
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/MatchPersonalFirstLastNameIn'
          type: array
      type: object
      xml:
        name: BatchMatchPersonalFirstLastNameIn
    FirstLastNamePhoneNumberGeoIn:
      example:
        firstName: firstName
        lastName: lastName
        phoneNumber: phoneNumber
        countryIso2Alt: countryIso2Alt
        id: id
        countryIso2: countryIso2
        FirstLastNameOriginedOut:
          lastName: lastName
          probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
          script: script
          regionOrigin: regionOrigin
          topRegionOrigin: topRegionOrigin
          firstName: firstName
          score: 8.0082819046101150206595775671303272247314453125
          subRegionOrigin: subRegionOrigin
          probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
          countriesOriginTop:
          - countriesOriginTop
          - countriesOriginTop
          id: id
          countryOrigin: countryOrigin
          countryOriginAlt: countryOriginAlt
      properties:
        id:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        phoneNumber:
          type: string
        FirstLastNameOriginedOut:
          $ref: '#/components/schemas/FirstLastNameOriginedOut'
        countryIso2:
          type: string
        countryIso2Alt:
          type: string
      type: object
      xml:
        name: FirstLastNamePhoneNumberGeoIn
    PersonalNameGeoOut:
      description: Classified geo names
      example:
        score: 8.0082819046101150206595775671303272247314453125
        country: country
        topRegion: topRegion
        subRegion: subRegion
        probabilityCalibrated: 6.02745618307040320615897144307382404804229736328125
        countriesTop:
        - countriesTop
        - countriesTop
        name: name
        countryAlt: countryAlt
        probabilityAltCalibrated: 1.46581298050294517310021547018550336360931396484375
        id: id
        region: region
        script: script
      properties:
        script:
          type: string
        id:
          type: string
        name:
          description: The input name.
          type: string
        score:
          description: 'Higher score is better, but score is not normalized. Use calibratedProbability
            if available. '
          format: double
          maximum: 100
          minimum: 0
          type: number
        country:
          description: 'Most likely country '
          type: string
        countryAlt:
          description: 'Second best alternative : country '
          type: string
        region:
          description: Most likely region (based on country ISO2 code)
          type: string
        topRegion:
          description: Most likely top region (based on country ISO2 code)
          type: string
        subRegion:
          description: Most likely sub region (based on country ISO2 code)
          type: string
        countriesTop:
          description: List countries (top 10)
          items:
            description: List countries (top 10)
            type: string
          type: array
        probabilityCalibrated:
          description: The calibrated probability for country to have been guessed correctly.
          format: double
          type: number
        probabilityAltCalibrated:
          description: The calibrated probability for country OR countryAlt to have been guessed correctly.
          format: double
          type: number
      type: object
      xml:
        name: PersonalNameGeoOut
    BatchFirstLastNameGeoIn:
      example:
        personalNames:
        - firstName: firstName
          lastName: lastName
          id: id
          countryIso2: countryIso2
        - firstName: firstName
          lastName: lastName
          id: id
          countryIso2: countryIso2
      properties:
        personalNames:
          items:
            $ref: '#/components/schemas/FirstLastNameGeoIn'
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGeoIn
  securitySchemes:
    api_key:
      description: api_key required
      in: header
      name: X-API-KEY
      type: apiKey
